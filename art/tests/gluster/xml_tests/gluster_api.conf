[RUN]
# Test scenario to run. May be the .ods file or the package of dtests.
tests_file = tests/gluster/xml_tests/gluster_api.xml
engine = rest
debug = yes
data_struct_mod = gluster_api.data_struct.data_structures
api_xsd = gluster_api/data_struct/api.xsd
media_type = application/xml

[HTTP_HEADERS]
Prefer=persistent-auth
#Filter=true

[REST_CONNECTION]
scheme = https
host = localhost
port = 443
user = admin
password = 123456
entry_point = api
user_domain = internal


[REST]
scheme=http
vdc=localhost
port=80


[PARAMETERS]
vds=10.35.97.162,10.35.97.47,10.35.64.205
compatibility_version=2.0
vds_password=qum5net,qum5net,qum5net
expected_spm_priority=0

## Dynamic parameters
cluster_name=TestCluster
data_center_name=Default
volume_name=boo
sec_volume=goo
volume_type=DISTRIBUTE,REPLICATE,STRIPE,DISTRIBUTED_REPLICATE,DISTRIBUTED_STRIPE
wrong_type=Distribute
transport_types=TCP
replica_count=0,3,0,2,0
stripe_count=0,0,4,0,4
access_protocols='NFS,GLUSTER'
#access_control_list="['10.4.10.*', '192.168.*.*']"
access_control_list="['*',]"

bricks="[{'server':'{vds[0]}','brick_dir':'/foo_1'},{'server':'{vds[1]}','brick_dir':'/foo_1'},{'server':'{vds[2]}','brick_dir':'/foo_1'},{'server':'{vds[2]}','brick_dir':'/foo_2'}]"
sec_vol_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_2'},{'server':'{vds[1]}','brick_dir':'/foo_2'},{'server':'{vds[2]}','brick_dir':'/foo_3'},{'server':'{vds[2]}','brick_dir':'/foo_4'}]"
game_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_1'}]"
game_bricks2="[{'server':'{vds[0]}','brick_dir':'/foo_11'}]"

replica_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_1'}, {'server':'{vds[1]}','brick_dir':'/foo_1'}, {'server':'{vds[2]}','brick_dir':'/foo_1'}]"
replica_add_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_11'}, {'server':'{vds[1]}','brick_dir':'/foo_11'}]"
sec_replica_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_2'},{'server':'{vds[1]}','brick_dir':'/foo_2'},{'server':'{vds[2]}','brick_dir':'/foo_2'}]"

remove_replica_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_1'},{'server':'{vds[1]}','brick_dir':'/foo_1'}]"
dreplica_add_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_2'},{'server':'{vds[1]}','brick_dir':'/foo_2'}]"

sec_stripe_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_3'},{'server':'{vds[1]}','brick_dir':'/foo_3'},{'server':'{vds[2]}','brick_dir':'/foo_4'},{'server':'{vds[2]}','brick_dir':'/foo_5'}]"
dstripe_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_1'},{'server':'{vds[1]}','brick_dir':'/foo_1'},{'server':'{vds[2]}','brick_dir':'/foo_1'},{'server':'{vds[2]}','brick_dir':'/foo_2'},{'server':'{vds[0]}','brick_dir':'/foo_2'},{'server':'{vds[1]}','brick_dir':'/foo_2'},{'server':'{vds[2]}','brick_dir':'/foo_3'},{'server':'{vds[2]}','brick_dir':'/foo_4'}]"
dstripe_remove_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_1'},{'server':'{vds[1]}','brick_dir':'/foo_1'},{'server':'{vds[2]}','brick_dir':'/foo_1'},{'server':'{vds[2]}','brick_dir':'/foo_2'}]"
dstripe_add_bricks="[{'server':'{vds[0]}','brick_dir':'/foo_3'},{'server':'{vds[1]}','brick_dir':'/foo_3'},{'server':'{vds[2]}','brick_dir':'/foo_5'},{'server':'{vds[2]}','brick_dir':'/foo_6'}]"

volume_ip=10.35.97.162
volume_export_dir=/boo
mount_host=10.35.97.47,root,qum5net
mount_point=/moo
mount_volume_type=glusterfs
brick_dir_base_name=/foo_*
options="[{'name':'auth.allow','type':'option','value':'*'},{'name':'nfs.disable','type':'option','value':'off'},]"
#options="[{'name':'nfs.disable','type':'option','value':'off'},]"
gluster_support=True
virt_support=False

[REPORT]
has_sub_tests=yes
add_report_nodes=no


#############################################################################################
################ sections relevant to jenkins only ###########################################
##############################################################################################

[JENKINS]
product=rhsc
version=2.0
# system paths
jboss_home = /usr/share/ovirt-engine
ear_path = engine.ear
mvn_profiles = dep, setup
health_page_url = http://localhost/OvirtEngineWeb/HealthStatus
jboss_service_name = jbossas
jboss_root_dir = /usr/share/ovirt-engine/engine.ear/root.war
openssl_lockfile = /var/lock/ovirt-engine/.openssl.exclusivelock
public_ssh_key = /local-ca-dir/ca/keys/engine.ssh.key.txt
ear_src_path = /usr/share/ovirt-engine
engine_keys_dir = /etc/pki/ovirt-engine/keys

# since we use dynamic storage, we disable the cleaner for now.
enable_vds_cleaner = false

# git locations
jenkins_git_path = jenkins/jobs/automation-tests/rhevm-automation-tests
tlv_qe_python_git_path = automation/tlv-qe-python
rest_api_tests_git_path = automation/RESTAPITests

xml_results_file = results.xml

# use this to tell jenkins to add the '-D REST.data_center_type' option to cli
specify_datacenter_type = true

# db info
db_user = postgres
db_name = engine
db_scripts_home = backend/manager/dbscripts

[COBERTURA]
# choose 'yes' or 'no' to enable cobertura code coverage
enable = no
reports_server = jenkins.eng.lab.tlv.redhat.com
reports_server_user = root
reports_server_pass = qum5net
reports_src_dir = /var/tmp/qe_tests/coverage/reports/cobertura-html
reports_server_dest_path = /var/www/html/jenkins/automation-reports/cobertura/storage
cobertura_ser_file = /var/tmp/qe_tests/coverage/cobertura.ser
cobertura_bin_dir = jenkins/tools/cobertura/latest

#relative to jenkins_git_path
ant_build_file = coverage/build.xml

[VDC_OPTIONS]
# all vdc options needed to change for this test
# important: all keys/values are case sensitive
InstallVds = true
SSLEnabled = true
UseSecureConnectionWithServers = true

# todo - move these settings into code if ssl enabled
CertificateFileName = /local-ca-dir/ca/certs/engine.cer
CABaseDirectory = /local-ca-dir/ca
CACertificatePath = /local-ca-dir/ca/ca.pem
CAEngineKey = /local-ca-dir/ca/engine.pem
TruststoreUrl = /local-ca-dir/ca/.keystore
keystoreUrl = /local-ca-dir/ca/.keystore
SignScriptName = SignReq.sh
ServerRebootTimeout = 150
AdminPassword = 123456
MacPoolRanges = 00:1a:4a:16:95:90-00:1a:4a:16:95:c0

