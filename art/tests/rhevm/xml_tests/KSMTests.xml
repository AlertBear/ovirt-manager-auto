<?xml version="1.0" encoding="UTF-8"?>
<!-- vim: set ts=3 sw=3 expandtab: -->
<?xml-stylesheet type="text/xsl" href="table.xslt"?>

<input>
<test_case>
   <test_name>START_GROUP: ksmtest_set-up</test_name>
   <test_action/>
   <parameters></parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create Data Center</test_name>
   <test_action>addDataCenter</test_action>
   <parameters>name='ksmtest_DC', storage_type='{storage_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create Cluster</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='ksmtest_Cl', cpu='{cpu_name}', version='{compatibility_version}', data_center='ksmtest_DC'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Add Host</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds[0]}', root_password='{vds_password[0]}', cluster='ksmtest_Cl', wait=True</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>iSCSI Discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address}'</parameters>
   <positive>TRUE</positive>
   <run>if('{storage_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>iSCSI Login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address}', target='{lun_target}'</parameters>
   <positive>TRUE</positive>
   <run>if('{storage_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>Create Data Storage Domain iSCSI</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='ksmtest_DD', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun}', lun_address='{lun_address}', lun_target='{lun_target}', lun_port='3260'</parameters>
   <positive>TRUE</positive>
   <run>if('{storage_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>Create Data Storage Domain NFS</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='ksmtest_DD', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', host='{vds[0]}', address='{ksmtest_data_domain_address}', path='{ksmtest_data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>if('{storage_type}' == 'e{storage_type_nfs}')</run>
</test_case>
<test_case>
   <test_name>Attach Master Data Storage Domain to Data Center</test_name>
   <test_action>attachStorageDomain</test_action>
   <parameters>datacenter='ksmtest_DC', storagedomain='ksmtest_DD'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create master VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='ksmtest_master', vmDescription='KSM and THP testing VM master', cluster='ksmtest_Cl', storageDomainName='ksmtest_DD', size=3221225472, nic='nic1', memory={ksmtest_vmmem}</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Install RHEL on master</test_name>
   <test_action>unattendedInstallation</test_action>
   <parameters>vm='ksmtest_master', nic='nic1', image='{cobbler_profile}', cobblerAddress='{cobbler_address}', cobblerUser='{cobbler_user}', cobblerPasswd='{cobbler_passwd}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Wait for master to be installed</test_name>
   <test_action>waitUntilVmQuery</test_action>
   <parameters>vm='ksmtest_master',query='status=up and ip=10.35.*', timeout=1200, sleep=10</parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Stop master VM</test_name>
   <test_action>stopVm</test_action>
   <parameters>vm='ksmtest_master'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create Template From master VM</test_name>
   <test_action>createTemplate</test_action>
   <parameters>vm='ksmtest_master', name='ksmtest_template', cluster='ksmtest_Cl'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove master VM</test_name>
   <test_action>removeVms</test_action>
   <parameters>vms='ksmtest_master'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Calculate max number for guests</test_name>
   <test_action>calcVMNum</test_action>
   <parameters>host='{vds[0]}', vm_mem={ksmtest_vmmem}, cluster='ksmtest_Cl'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output>
      vm_num->vm_num
   </fetch_output>
</test_case>
<test_case>
   <test_name>Add the calculated number of VMs</test_name>
   <test_action>addVmPool</test_action>
   <parameters>name='ksmtest', size=%vm_num%, cluster='ksmtest_Cl', template='ksmtest_template'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>END_GROUP: ksmtest_set-up</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
<test_case>
   <test_name>START_GROUP: ksmtest_runtests</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
<test_case>
   <test_name>Do the KSM kickin test</test_name>
   <test_action>measureKSMThreshold</test_action>
   <parameters>poolname='ksmtest', vm_total=%vm_num%, host='{vds[0]}', host_user='root', host_passwd='{vds_password[0]}', guest_user='{guest_user}', guest_passwd='{guest_passwd}', vm_mem={ksmtest_vmmem}, loadType='MEM', port={ksmtest_loadport}, allocationSize={ksmtest_memload_mb}</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Verify the KSM kickin point</test_name>
   <test_action>verifyKSMThreshold</test_action>
   <parameters>poolname='ksmtest', vm_total=%vm_num%, host='{vds[0]}', host_user='root', host_passwd='{vds_password[0]}', guest_user='{guest_user}', guest_passwd='{guest_passwd}', vm_mem={ksmtest_vmmem}, loadType='MEM', port={ksmtest_loadport}, allocationSize={ksmtest_memload_mb}</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Do the host saturation test</test_name>
   <test_action>saturateHost</test_action>
   <parameters>poolname='ksmtest', vm_total=%vm_num%, host='{vds[0]}', host_user='root', host_passwd='{vds_password[0]}', guest_user='{guest_user}', guest_passwd='{guest_passwd}', loadType='CPU', port={ksmtest_loadport}, load=100</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>END_GROUP: ksmtest_runtests</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
<test_case>
<test_name>START_GROUP: ksmtest_tear-down</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Detach all VM from the pool</test_name>
   <test_action>detachVms</test_action>
   <parameters>vmpool="ksmtest"</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Detach all VM from the pool</test_name>
   <test_action>removeVmPool</test_action>
   <parameters>vmpool="ksmtest"</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove the VMs that were in the pool</test_name>
   <test_action>removePooledVms</test_action>
   <parameters>name="ksmtest", vm_total=%vm_num%</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Wait for VM remove tasks to complete</test_name>
   <test_action>sleep</test_action>
   <parameters>seconds=15</parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove the template</test_name>
   <test_action>removeTemplate</test_action>
   <parameters>template='ksmtest_template'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Deactivate Storage Domain</test_name>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='ksmtest_DC', storagedomain='ksmtest_DD'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Data Centers</test_name>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='ksmtest_DC'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Storage Domain</test_name>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='ksmtest_DD', host='{vds[0]}', format='true'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Set Active Host To Maintenance</test_name>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Inactive Host</test_name>
   <test_action>removeHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Clusters</test_name>
   <test_action>removeClusters</test_action>
   <parameters>clusters='ksmtest_Cl'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Check no error events occured</test_name>
   <test_action>searchForRecentEvent</test_action>
   <parameters>win_start_query='ksmtest_DC type=950', query='severity>=error', expected_count=0</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>END_GROUP: ksmtest_tear-down</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
</input>
