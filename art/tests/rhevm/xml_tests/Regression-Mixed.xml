<?xml version='1.0' encoding='utf-8'?>
<!-- vim: set ts=3 sw=3 expandtab: -->
<?xml-stylesheet type="text/xsl" href="table.xslt"?>
<input>
  <!-- ////////////////////////// SETUP /////////////////////////////// -->
  <test_case>
    <test_name>START_GROUP: Setup</test_name>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759b7dc-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create default data center</test_name>
    <test_action>addDataCenter</test_action>
    <parameters>name='DefaultRest', storage_type='e{storage_type_nfs}', version='{compatibility_version}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description/>
  </test_case>
  <test_case>
    <id>d759bb60-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create cluster with default parameters</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster1', cpu='{cpu_name}', data_center='DefaultRest', version='{compatibility_version}', on_error='migrate'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759bd7c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create host</test_name>
    <test_action>addHost</test_action>
    <parameters>name='{vds[0]}', root_password='{vds_password[0]}', cluster='RestCluster1', wait=False, vdcPort='{port}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759c178-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether 'host type' property is present</test_name>
    <test_action>xpathHosts</test_action>
    <parameters>'hosts', xpath='count(/hosts/host[name="{vds[0]}"]/type/text())'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759c36c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether member of /domains collection returns correct domains ID</test_name>
    <test_action>checkDomainsId</test_action>
    <parameters/>
    <positive>NONE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759c56a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether there is a 'custom_properties/custom_property' tag is in 3.1 capabilities</test_name>
    <test_action>xpathVms</test_action>
    <parameters>'capabilities', xpath='count(/capabilities/version[@major=3 and @minor=1]/custom_properties/custom_property)'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759c75e-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether all 'custom_properties/custom_property' have regexp and name nodes</test_name>
    <test_action>xpathVms</test_action>
    <parameters>'capabilities', xpath='count(/capabilities/version/custom_properties/custom_property[not(@regexp) or not(@name)])', rslt_eval='0==result'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <test_name>END_GROUP: Setup</test_name>
  </test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- ////////////////////////// DATACENTERS /////////////////////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <test_case>
    <test_name>START_GROUP: Data_Centers</test_name>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759c95c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create NFS data center</test_name>
    <test_action>addDataCenter</test_action>
    <parameters>name='RestDataCenter1', storage_type='e{storage_type_nfs}', version='3.0'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 301}</conf>
  </test_case>
  <test_case>
    <id>d759cb50-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create temporary iSCSI data center</test_name>
    <test_action>addDataCenter</test_action>
    <parameters>name='RestDataCenter2', storage_type='e{storage_type_iscsi}', version='{compatibility_version}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 302}</conf>
  </test_case>
  <test_case>
    <id>d759cd44-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create data center with spaces in name</test_name>
    <test_action>addDataCenter</test_action>
    <parameters>name='No Data Center', storage_type='e{storage_type_iscsi}', version='{compatibility_version}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759cf38-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create data center with existing name</test_name>
    <test_action>addDataCenter</test_action>
    <parameters>name='RestDataCenter2', storage_type='e{storage_type_iscsi}', version='{compatibility_version}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>bb2e9c40-f4f7-11e1-8dab-0024d7421ca4</id>
    <test_name>Create data center with wrong storage type</test_name>
    <test_action>addDataCenter</test_action>
    <parameters>name='DefaultRest', storage_type='aaa', version='{compatibility_version}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
    <test_description/>
  </test_case>
  <test_case>
    <id>d759d122-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update data center name and description</test_name>
    <test_action>updateDataCenter</test_action>
    <parameters>datacenter='RestDataCenter1', name='RestDataCenterUpdated', description='Data Center Description'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 303}</conf>
  </test_case>
  <test_case>
    <id>d759d32a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update data center type</test_name>
    <test_action>updateDataCenter</test_action>
    <parameters>datacenter='RestDataCenter2', storage_type='e{storage_type_nfs}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 304}</conf>
  </test_case>
  <test_case>
    <id>d759d56e-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove temporary data center</test_name>
    <test_action>removeDataCenter</test_action>
    <parameters>datacenter='RestDataCenter2'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 305}</conf>
  </test_case>
  <test_case>
    <id>d759d780-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for data centers</test_name>
    <test_action>searchForDataCenter</test_action>
    <parameters>query_key='type', query_val='e{storage_type_nfs}', key_name='storage_type'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <test_name>END_GROUP: Data_Centers</test_name>
  </test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- ///////////////////////////// CLUSTERS /////////////////////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <test_case>
    <test_name>START_GROUP: Clusters</test_name>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759df64-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create cluster with name of existing one</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster1', cpu='{cpu_name}', data_center='DefaultRest'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>bb2ea51e-f4f7-11e1-8dab-0024d7421ca4</id>
    <test_name>Create cluster with wrong cpu name</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster1', cpu='aaa', data_center='DefaultRest'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759e158-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create cluster with specific version</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster4', cpu='{cpu_name}', version='{compatibility_version}', data_center='DefaultRest'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 306}</conf>
  </test_case>
  <test_case>
    <id>d759e342-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create temporary cluster with specific data center</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster3', cpu='{cpu_name}', data_center='RestDataCenterUpdated', on_error='do_not_migrate'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 307}</conf>
  </test_case>
  <test_case>
    <id>d759e536-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for clusters</test_name>
    <test_action>searchForCluster</test_action>
    <parameters>query_key='name', query_val='RestCluster*', key_name='name'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759e536-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for clusters - case insensitive</test_name>
    <test_action>searchForCluster</test_action>
    <parameters>query_key='name', query_val='restcluster*', key_name='name', case_sensitive=False</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759e536-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for clusters - max limit</test_name>
    <test_action>searchForCluster</test_action>
    <parameters>query_key='name', query_val='RestCluster*', key_name='name', max=2</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759e536-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for clusters - max limit and case insensitive</test_name>
    <test_action>searchForCluster</test_action>
    <parameters>query_key='name', query_val='RestCluster*', key_name='name', case_sensitive=False, max=3</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759e720-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update cluster</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster3', name='RestCluster3Upd', cpu='{cpu_name}', description='Cluster Description', on_error='migrate_highly_available'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 308}</conf>
  </test_case>
  <test_case>
    <id>d759e90a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update cluster data center</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster3Upd', data_center='DefaultRest'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759eafe-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove temporary cluster</test_name>
    <test_action>removeCluster</test_action>
    <parameters>cluster='RestCluster3Upd'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 309}</conf>
  </test_case>
  <test_case>
    <id>d759f2b0-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create cluster with specific memory overcommit</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster5', cpu='{cpu_name}', data_center='DefaultRest', version='{compatibility_version}', mem_ovrcmt_prc='75'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>mem_overcommit</test_description>
    <conf>headers={'Correlation-Id': 310}</conf>
  </test_case>
  <test_case>
    <id>bb2eb0b8-f4f7-11e1-8dab-0024d7421ca4</id>
    <test_name>Create cluster with wrong scheduling policy</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster6', cpu='{cpu_name}', data_center='DefaultRest', version='{compatibility_version}', scheduling_policy='aaa', thrhld_low='20', thrhld_high='60', duration='180'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d759f4a4-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create cluster with scheduling policy power_saving</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster6', cpu='{cpu_name}', data_center='DefaultRest', version='{compatibility_version}', scheduling_policy='e{scheduling_policy_power_saving}', thrhld_low='20', thrhld_high='60', duration='180'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
    <conf>headers={'Correlation-Id': 311}</conf>
  </test_case>
  <test_case>
    <id>d759f68e-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create cluster with scheduling policy evenly_distributed</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='RestCluster7', cpu='{cpu_name}', data_center='DefaultRest', version='{compatibility_version}', scheduling_policy='e{scheduling_policy_evenly_distributed}', thrhld_high='60', duration='180'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
    <conf>headers={'Correlation-Id': 312}</conf>
  </test_case>
  <test_case>
    <id>d759f878-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check cluster memory overcommit</test_name>
    <test_action>checkClusterParams</test_action>
    <parameters>cluster='RestCluster5', mem_ovrcmt_prc='75'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>mem_overcommit</test_description>
  </test_case>
  <test_case>
    <id>d759fa6c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check cluster with scheduling policy power_saving</test_name>
    <test_action>checkClusterParams</test_action>
    <parameters>cluster='RestCluster6', scheduling_policy='e{scheduling_policy_power_saving}', thrhld_low='20', thrhld_high='60', duration='180'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>d759fc92-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check cluster with scheduling policy evenly_distributed</test_name>
    <test_action>checkClusterParams</test_action>
    <parameters>cluster='RestCluster7', scheduling_policy='e{scheduling_policy_evenly_distributed}', thrhld_high='60', duration='180'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>d759fe9a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update cluster with specific memory overcommit</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster5', cpu='{cpu_name}', data_center='DefaultRest', mem_ovrcmt_prc='76'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>mem_overcommit</test_description>
    <conf>headers={'Correlation-Id': 313}</conf>
  </test_case>
  <test_case>
    <id>ad2d33e0-c8f6-11e1-a294-0024d7421ca4</id>
    <test_name>Update cluster with high thresholds out of range</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster6', cpu='{cpu_name}', data_center='DefaultRest', thrhld_low='21', thrhld_high='110', duration='240', scheduling_policy='e{scheduling_policy_power_saving}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>ad2d38a4-c8f6-11e1-a294-0024d7421ca4</id>
    <test_name>Update cluster with low thresholds out of range</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster6', cpu='{cpu_name}', data_center='DefaultRest', thrhld_low='-1', thrhld_high='60', duration='240', scheduling_policy='e{scheduling_policy_power_saving}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>d75a0084-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update cluster with specific thresholds relevant to power_saving</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster6', cpu='{cpu_name}', data_center='DefaultRest', thrhld_low='21', thrhld_high='61', duration='240', scheduling_policy='e{scheduling_policy_power_saving}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
    <conf>headers={'Correlation-Id': 314}</conf>
  </test_case>
  <test_case>
    <id>d75a0278-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update cluster with specific thresholds relevant to evenly_ditributed</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster7', cpu='{cpu_name}', data_center='DefaultRest', thrhld_high='61', duration='240', scheduling_policy='e{scheduling_policy_evenly_distributed}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
    <conf>headers={'Correlation-Id': 315}</conf>
  </test_case>
  <test_case>
    <id>d75a0462-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check cluster memory overcommit again after cluster update</test_name>
    <test_action>checkClusterParams</test_action>
    <parameters>cluster='RestCluster5', mem_ovrcmt_prc='76'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>mem_overcommit</test_description>
  </test_case>
  <test_case>
    <id>d75a064c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check cluster scheduling policy on cluster with power_saving policy</test_name>
    <test_action>checkClusterParams</test_action>
    <parameters>cluster='RestCluster6', thrhld_low='21', thrhld_high='61', duration='240', scheduling_policy='e{scheduling_policy_power_saving}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>d75a0840-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check cluster scheduling policy on cluster with evenly_distributed policy</test_name>
    <test_action>checkClusterParams</test_action>
    <parameters>cluster='RestCluster7', thrhld_high='61', duration='240', scheduling_policy='e{scheduling_policy_evenly_distributed}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>d75a0a2a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update cluster with specific scheduling policy</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster7', scheduling_policy='e{scheduling_policy_power_saving}', thrhld_low='20'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
    <conf>headers={'Correlation-Id': 316}</conf>
  </test_case>
  <test_case>
    <id>d75a0c14-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether cluster scheduling policy changed</test_name>
    <test_action>checkClusterParams</test_action>
    <parameters>cluster='RestCluster7', thrhld_low='20', thrhld_high='61', duration='240', scheduling_policy='e{scheduling_policy_power_saving}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>d75a0dfe-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update cluster with threshold/low &gt; threshold/high</test_name>
    <test_action>updateCluster</test_action>
    <parameters>cluster='RestCluster7', scheduling_policy='e{scheduling_policy_power_saving}', thrhld_low='60', thrhld_high='20'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
    <test_description>sched_pol</test_description>
  </test_case>
  <test_case>
    <id>d75a0fe8-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check 3.1 capabilities - if it contains 'Transparent-Huge-Pages Memory Policy' feature</test_name>
    <test_action>xpathClusters</test_action>
    <parameters>'capabilities', xpath='count(/capabilities/version[@major=3 and @minor=1]/features/feature/name[text()="Transparent-Huge-Pages Memory Policy"])'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a11d2-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether 'Everyone' group exists</test_name>
    <test_action>groupExists</test_action>
    <parameters>group_name='Everyone'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a13bc-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Try to delete 'Everyone' group</test_name>
    <test_action>deleteGroup</test_action>
    <parameters>group_name='Everyone'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a15a6-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Wait until single host is up</test_name>
    <test_action>waitForHostsStates</test_action>
    <parameters>names='{vds[0]}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <vital>TRUE</vital>
  </test_case>
  <test_case>
    <test_name>END_GROUP: Clusters</test_name>
  </test_case>
  <!-- /////////////////////// TEST SCENARIO //////////////////////////////// -->
  <test_case>
    <id>ba3ddf2a-c695-11e1-bc9c-f0def10e0ce8</id>
    <test_name>Activate active host</test_name>
    <test_action>activateHost</test_action>
    <parameters>host='{vds[0]}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <test_name>START_GROUP: Mixed_Scenario</test_name>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>bb2ec3e6-f4f7-11e1-8dab-0024d7421ca4</id>
    <test_name>Check product name</test_name>
    <test_action>checkProductName</test_action>
    <parameters>name='{product_name}'</parameters>
    <positive>NONE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a179a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create storage domain with wrong type</test_name>
    <test_action>addStorageDomain</test_action>
    <parameters>name='DataDomainRest', type='aaa', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a179a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create NFS data storage domain</test_name>
    <test_action>addStorageDomain</test_action>
    <parameters>name='DataDomainRest', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 317}</conf>
  </test_case>
  <test_case>
    <id>d75a1984-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Attach NFS data storage domain to data center</test_name>
    <test_action>attachStorageDomain</test_action>
    <parameters>datacenter='DefaultRest', storagedomain='DataDomainRest'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 318}</conf>
  </test_case>
  <test_case>
    <id>d75a1b6e-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update storage domain name</test_name>
    <test_action>updateStorageDomain</test_action>
    <parameters>storagedomain='DataDomainRest', name='DataDomainRestUpd'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 319}</conf>
  </test_case>
  <test_case>
    <id>d75a1d58-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create VM to test templates</test_name>
    <test_action>addVm</test_action>
    <parameters>name='restvm_templates', cluster='RestCluster1'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 320}</conf>
  </test_case>
  <test_case>
    <id>bb2ecb7a-f4f7-11e1-8dab-0024d7421ca4</id>
    <test_name>Add Disk with wrong format</test_name>
    <test_action>addDiskToVm</test_action>
    <parameters>vm='restvm_templates', size=2147483648, storagedomain='DataDomainRestUpd', type='e{disk_type_system}', format='aaa', interface='e{interface_ide}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>bb2ed246-f4f7-11e1-8dab-0024d7421ca4</id>
    <test_name>Add Disk with wrong interface</test_name>
    <test_action>addDiskToVm</test_action>
    <parameters>vm='restvm_templates', size=2147483648, storagedomain='DataDomainRestUpd', type='e{disk_type_system}', format='e{format_cow}', interface='aaa'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a1f42-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add Disk To VM that tests template</test_name>
    <test_action>addDiskToVm</test_action>
    <parameters>vm='restvm_templates', size=2147483648, storagedomain='DataDomainRestUpd', type='e{disk_type_system}', format='e{format_cow}', interface='e{interface_ide}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 321}</conf>
    <exp_events>2</exp_events>
  </test_case>
  <test_case>
    <id>d75a212c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create template with default parameters</test_name>
    <test_action>createTemplate</test_action>
    <parameters>vm='restvm_templates', name='rest_templ3', cluster='RestCluster1'</parameters>
    <positive>TRUE</positive>
    <conf>headers={'Correlation-Id': 322}</conf>
    <exp_events>2</exp_events>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a235c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create VM to test tags and user permissions</test_name>
    <test_action>addVm</test_action>
    <parameters>name='restvm_tags_users', cluster='RestCluster1'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 323}</conf>
  </test_case>
  <test_case>
    <id>d75a2564-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create user</test_name>
    <test_action>addUser</test_action>
    <parameters>user_name='{new_user}', domain='{user_domain}', role='e{role_name_user_role}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <bz>811985</bz>
    <conf>headers={'Correlation-Id': 324}</conf>
  </test_case>
  <test_case>
    <id>d75a2758-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add data center permission to user</test_name>
    <test_action>addPermissionsForDataCenter</test_action>
    <parameters>user='{new_user}', data_center='DefaultRest'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 325}</conf>
  </test_case>
  <test_case>
    <id>d75a2942-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove all permissions from user</test_name>
    <test_action>removeAllPermissionsFromUser</test_action>
    <parameters>user='{new_user}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 326}</conf>
    <exp_events>3</exp_events>
    <bz>890124</bz>
  </test_case>
  <test_case>
    <id>d75a2b22-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create tag</test_name>
    <test_action>addTag</test_action>
    <parameters>name='TagRestTest_sentinel', description='Test Tag Description'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 327}</conf>
  </test_case>
  <test_case>
    <id>d75a2d16-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create second tag</test_name>
    <test_action>addTag</test_action>
    <parameters>name='TagRestTest2', description='Test Tag Description'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 328}</conf>
  </test_case>
  <test_case>
    <id>d75a2f00-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create third tag</test_name>
    <test_action>addTag</test_action>
    <parameters>name='TagRestTest3'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 329}</conf>
  </test_case>
  <test_case>
    <id>d75a30ea-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create fourth tag</test_name>
    <test_action>addTag</test_action>
    <parameters>name='TagRestTest_to_existing_name'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 330}</conf>
  </test_case>
  <test_case>
    <id>d75a32ca-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create fifth tag</test_name>
    <test_action>addTag</test_action>
    <parameters>name='TagRestTestExisting'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 331}</conf>
  </test_case>
  <test_case>
    <id>d75a34be-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create subtag</test_name>
    <test_action>addTag</test_action>
    <parameters>name='SubTagRestTest', description='Test Tag Description', parent='TagRestTest2'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 332}</conf>
  </test_case>
  <test_case>
    <id>d75a36a8-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create tag with existing name</test_name>
    <test_action>addTag</test_action>
    <parameters>name='SubTagRestTest', description='Test Tag Description'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a3892-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update tag name and description</test_name>
    <test_action>updateTag</test_action>
    <parameters>tag='TagRestTest_sentinel', name='TagRestTestUpd', description='Test Tag Description Updates'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 333}</conf>
  </test_case>
  <test_case>
    <id>d75a3a7c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update tag parent to itself</test_name>
    <test_action>updateTag</test_action>
    <parameters>tag='TagRestTest2', parent='TagRestTest2'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a3c70-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update tag parent</test_name>
    <test_action>updateTag</test_action>
    <parameters>tag='TagRestTest3', parent='SubTagRestTest'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 334}</conf>
    <exp_events>2</exp_events>
  </test_case>
  <test_case>
    <id>d75a3e5a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create tag loop</test_name>
    <test_action>updateTag</test_action>
    <parameters>tag='TagRestTest2', parent='TagRestTest3'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a4044-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove TagRestTest2</test_name>
    <test_action>removeTag</test_action>
    <parameters>tag='TagRestTest2'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 335}</conf>
  </test_case>
  <test_case>
    <id>d75a4224-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Associate tag with VM</test_name>
    <test_action>addTagToVm</test_action>
    <parameters>tag='TagRestTestUpd', vm='restvm_tags_users'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 336}</conf>
  </test_case>
  <test_case>
    <id>d75a440e-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Associate non-existing tag with VM</test_name>
    <test_action>addTagToVm</test_action>
    <parameters>tag='TagRestTest', vm='restvm_tags_users'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a45f8-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for VM by tag</test_name>
    <test_action>searchForVm</test_action>
    <parameters>query_key='tag', query_val='TagRestTestUpd*', expected_count=1</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a47ec-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Associate tag with host</test_name>
    <test_action>addTagToHost</test_action>
    <parameters>tag='TagRestTestUpd', host='{vds[0]}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 337}</conf>
  </test_case>
  <test_case>
    <id>d75a49cc-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for host by tag</test_name>
    <test_action>searchForHost</test_action>
    <parameters>query_key='tag', query_val='TagRestTestUpd*', expected_count=1</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a4c06-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove tag from VM</test_name>
    <test_action>removeTagFromVm</test_action>
    <parameters>tag='TagRestTestUpd', vm='restvm_tags_users'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 338}</conf>
  </test_case>
  <test_case>
    <id>d75a4dfa-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove tag from host</test_name>
    <test_action>removeTagFromHost</test_action>
    <parameters>tag='TagRestTestUpd', host='{vds[0]}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 339}</conf>
  </test_case>
  <test_case>
    <id>d75a4fe4-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Update tag name to existing name</test_name>
    <test_action>updateTag</test_action>
    <parameters>tag='TagRestTest_to_existing_name', name='TagRestTestExisting'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a51ce-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether TagRestTestUpd is unique</test_name>
    <test_action>xpathTags</test_action>
    <parameters>'tags', xpath='count(/tags/tag/name[text()="TagRestTestExisting"])', rslt_eval='1==result'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a53b8-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove TagRestTest_to_existing_name</test_name>
    <test_action>removeTag</test_action>
    <parameters>tag='TagRestTest_to_existing_name'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 340}</conf>
  </test_case>
  <test_case>
    <id>d75a55ac-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove TagRestTestExisting</test_name>
    <test_action>removeTag</test_action>
    <parameters>tag='TagRestTestExisting'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 341}</conf>
  </test_case>
  <test_case>
    <test_name>END_GROUP: Mixed_Scenario</test_name>
  </test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- ///////////////////////////// USERS AND ROLES //////////////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <test_case>
    <test_name>START_GROUP: User_Roles</test_name>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a66f0-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add role to user</test_name>
    <test_action>addRoleToUser</test_action>
    <parameters>user='{new_user}', role='e{role_name_power_user_role}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 342}</conf>
  </test_case>
  <test_case>
    <id>d75a68da-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create user with no roles</test_name>
    <test_action>addUser</test_action>
    <parameters>user_name='{no_roles_user}', domain='{user_domain}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 343}</conf>
  </test_case>
  <test_case>
    <id>d75a6ac4-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create user with wrong domain</test_name>
    <test_action>addUser</test_action>
    <parameters>user_name='{wrong_domain_user}', domain='not.existing.domain.com'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a6cae-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Create user that doesn't exist in domain</test_name>
    <test_action>addUser</test_action>
    <parameters>user_name='{not_existing_user}', domain='{user_domain}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a6e98-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add tag to user</test_name>
    <test_action>addTagToUser</test_action>
    <parameters>user='{new_user}', tag='TagRestTestUpd'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 344}</conf>
  </test_case>
  <test_case>
    <id>d75a7082-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check system summary</test_name>
    <test_action>checkSummary</test_action>
    <parameters>domain='{user_domain}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a733e-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check existing permissions</test_name>
    <test_action>checkSystemPermits</test_action>
    <parameters/>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a7532-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add role</test_name>
    <test_action>addRole</test_action>
    <parameters>name='New_Role', administrative='true', permits='e{create_vm_permit} e{create_host_permit} e{manipulate_roles_permit} e{delete_cluster_permit}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 345}</conf>
  </test_case>
  <test_case>
    <id>d75a7726-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add non-admin role</test_name>
    <test_action>addRole</test_action>
    <parameters>name='NA_Role', administrative='false', permits='e{create_vm_permit} e{migrate_vm_permit} e{delete_vm_permit}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 346}</conf>
  </test_case>
  <test_case>
    <id>d75a791a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove non-admin role</test_name>
    <test_action>removeRole</test_action>
    <parameters>role='NA_Role'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 347}</conf>
  </test_case>
  <test_case>
    <id>d75a7b04-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add role of non-admin type with admin permits</test_name>
    <test_action>addRole</test_action>
    <parameters>name='Bad_Role', administrative='false', permits='e{create_vm_permit} e{create_host_permit} e{manipulate_roles_permit} e{delete_cluster_permit}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a7cee-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add permission to role</test_name>
    <test_action>addRolePermissions</test_action>
    <parameters>role='New_Role', permit='e{create_storage_domain_permit}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 348}</conf>
  </test_case>
  <test_case>
    <id>d75a7f0a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove permission from role</test_name>
    <test_action>removeRolePermissions</test_action>
    <parameters>role='New_Role', permit='e{create_storage_domain_permit}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 349}</conf>
    <bz>887805</bz>
  </test_case>
  <test_case>
    <id>d75a80fe-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove role</test_name>
    <test_action>removeRole</test_action>
    <parameters>role='New_Role'</parameters>
    <positive>TRUE</positive>
    <conf>headers={'Correlation-Id': 350}</conf>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a82de-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove system role</test_name>
    <test_action>removeRole</test_action>
    <parameters>role='HostAdmin'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a84c8-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add permission to system role</test_name>
    <test_action>addRolePermissions</test_action>
    <parameters>role='HostAdmin', permit='e{create_storage_domain_permit}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a86a8-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove permission from system role</test_name>
    <test_action>removeRolePermissions</test_action>
    <parameters>role='StorageAdmin', permit='e{create_storage_domain_permit}'</parameters>
    <positive>FALSE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a8892-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add VM permission to user</test_name>
    <test_action>addVMPermissionsToUser</test_action>
    <parameters>user='{new_user}', vm='restvm_tags_users'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 351}</conf>
  </test_case>
  <test_case>
    <id>d75a8a7c-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add host permission to user</test_name>
    <test_action>addHostPermissionsToUser</test_action>
    <parameters>user='{new_user}', host='{vds[0]}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 352}</conf>
  </test_case>
  <test_case>
    <id>d75a8c66-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add storage permission to user</test_name>
    <test_action>addStoragePermissionsToUser</test_action>
    <parameters>user='{new_user}', storage='DataDomainRestUpd'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 353}</conf>
  </test_case>
  <test_case>
    <id>d75a8e50-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add clusters permission to user</test_name>
    <test_action>addClusterPermissionsToUser</test_action>
    <parameters>user='{new_user}', cluster='Default'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 354}</conf>
  </test_case>
  <test_case>
    <id>d75a9030-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add clusters permission to group</test_name>
    <test_action>addClusterPermissionsToGroup</test_action>
    <parameters>group='Everyone', cluster='Default'</parameters>
    <positive>TRUE</positive>
    <run>no</run>
    <conf>headers={'Correlation-Id': 355}</conf>
  </test_case>
  <test_case>
    <id>d75a921a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add template permission to user</test_name>
    <test_action>addPermissionsForTemplate</test_action>
    <parameters>user='{new_user}', template='rest_templ3'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 356}</conf>
  </test_case>
  <test_case>
    <id>d75a93fa-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Add template permission to group</test_name>
    <test_action>addPermissionsForTemplateToGroup</test_action>
    <parameters>group='Everyone', template='rest_templ3'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 357}</conf>
  </test_case>
  <test_case>
    <id>d75a95e4-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check the system_version tag</test_name>
    <test_action>checkSystemVersionTag</test_action>
    <parameters/>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a97c4-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether there is a definition of blank template object</test_name>
    <test_action>xpathGeneral</test_action>
    <parameters>'api', xpath='count(/api/special_objects/link[@rel="templates/blank" and @href="/{entry_point}/templates/00000000-0000-0000-0000-000000000000"])'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a9a26-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check whether there is a definition of tag root object</test_name>
    <test_action>xpathGeneral</test_action>
    <parameters>'api', xpath='count(/api/special_objects/link[@rel="tags/root" and @href="/{entry_point}/tags/00000000-0000-0000-0000-000000000000"])'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75a9c1a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove tag</test_name>
    <test_action>removeTag</test_action>
    <parameters>tag='TagRestTestUpd'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 358}</conf>
  </test_case>
  <test_case>
    <id>d75a9e04-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove user</test_name>
    <test_action>removeUser</test_action>
    <parameters>user='{new_user}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 359}</conf>
  </test_case>
  <test_case>
    <id>d75aa02a-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove user with no roles</test_name>
    <test_action>removeUser</test_action>
    <parameters>user='{no_roles_user}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <conf>headers={'Correlation-Id': 360}</conf>
  </test_case>
  <test_case>
    <id>d75aa250-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check user properties in active directory</test_name>
    <test_action>verifyUser</test_action>
    <parameters>domain='{user_domain}', user='vdcadmin', expected_username='vdcadmin@{user_domain}', expected_department='Quality Assurance'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75aa476-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for an user in active directory by name</test_name>
    <test_action>searchForUserInAD</test_action>
    <parameters>query_key='name', query_val='vdcadmin', key_name='name', domain='{user_domain}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75aa660-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Search for an user in active directory by upn</test_name>
    <test_action>searchForUserInAD</test_action>
    <parameters>query_key='usrname', query_val='vdcadmin@{user_domain}', key_name='user_name', domain='{user_domain}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75ab3da-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Check xsd schema validations</test_name>
    <test_action>checkResponsesAreXsdValid</test_action>
    <parameters/>
    <positive>NONE</positive>
    <run>yes</run>
    <bz>904935</bz>
  </test_case>
  <test_case>
    <test_name>END_GROUP: User_Roles</test_name>
  </test_case>
  <!-- ////////////////////////// TEARDOWN /////////////////////////////// -->
  <test_case>
    <test_name>START_GROUP: Teardown</test_name>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>cb8bf834-c695-11e1-bca8-f0def10e0ce8</id>
    <test_name>Remove VMs</test_name>
    <test_action>removeVm</test_action>
    <parameters>vm='{vms_to_remove}'</parameters>
    <positive>TRUE</positive>
    <run>forkfor({vms_to_remove})</run>
  </test_case>
  <test_case>
    <id>ad2d8da4-c8f6-11e1-a294-0024d7421ca4</id>
    <test_name>Remove all remaining templates</test_name>
    <test_type>rest</test_type>
    <test_action>removeTemplates</test_action>
    <parameters>templates='rest_templ3'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75ab5ce-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Deactivate master storage domain</test_name>
    <test_action>deactivateStorageDomain</test_action>
    <parameters>datacenter='DefaultRest', storagedomain='DataDomainRestUpd'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75ab7b8-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove default datacenter</test_name>
    <test_action>removeDataCenter</test_action>
    <parameters>datacenter='DefaultRest'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>cb8d498c-c695-11e1-bca8-f0def10e0ce8</id>
    <test_name>Remove second data center</test_name>
    <test_action>removeDataCenter</test_action>
    <parameters>datacenter='RestDataCenterUpdated'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75ab998-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove master storage domain</test_name>
    <test_action>removeStorageDomain</test_action>
    <parameters>storagedomain='DataDomainRestUpd', host='{vds[0]}', format='true'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75abb82-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Set active host to maintenance</test_name>
    <test_action>deactivateHost</test_action>
    <parameters>host='{vds[0]}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75abd62-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove host</test_name>
    <test_action>removeHost</test_action>
    <parameters>host='{vds[0]}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
  </test_case>
  <test_case>
    <id>d75abf74-c695-11e1-a578-f0def10e0ce8</id>
    <test_name>Remove clusters</test_name>
    <test_action>removeCluster</test_action>
    <parameters>cluster='{clusters_to_remove}'</parameters>
    <positive>TRUE</positive>
    <run>forkfor({clusters_to_remove})</run>
  </test_case>
  <test_case>
    <test_name>END_GROUP: Teardown</test_name>
    <run>yes</run>
  </test_case>
</input>
