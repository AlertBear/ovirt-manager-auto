<input>
<test_case>
   <test_name>START_GROUP: TC_136167</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create hosts</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds}', root_password='{vds_password}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{vds_password})</run>
</test_case>
<test_case>
   <test_name>Wait until all hosts are up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}, {vds[1]}, {vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priorities</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds}', spmPriority='{spms_136167}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{spms_136167})</run>
</test_case>
<test_case>
   <test_name>Set hosts to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate hosts</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Set first host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the third host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for enabling the second host to become SPM</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate the first host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate the third host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the second host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[1]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the first host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the third host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove hosts</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136167</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_136169</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create hosts</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds}', root_password='{vds_password}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{vds_password})</run>
</test_case>
<test_case>
   <test_name>Wait until all hosts are up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}, {vds[1]}, {vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priorities</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds}', spmPriority='{spms_136169}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{spms_136169})</run>
</test_case>
<test_case>
   <test_name>Set hosts to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate hosts</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMPresence</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priority to remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds[0]}', spmPriority='5'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set hosts to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove hosts</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136169</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_136171</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create hosts</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds}', root_password='{vds_password}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{vds_password})</run>
</test_case>
<test_case>
   <test_name>Wait until all hosts are up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}, {vds[1]}, {vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priorities</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds}', spmPriority='{spms_136171}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{spms_136171})</run>
</test_case>
<test_case>
   <test_name>Set hosts to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate hosts</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Set first host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the third host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[1]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the second host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[1]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the first host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the third host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove hosts</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136171</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_136449</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create host</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds[0]}', root_password='{vds_password[0]}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Wait until host is up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check default SPM priority on host</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMPriority</test_action>
   <parameters>hostName='{vds[0]}', expectedPriority='5'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove host</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136449</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_136454</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create host</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds[0]}', root_password='{vds_password[0]}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Wait until host is up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priority to 11</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriorityInDB</test_action>
   <parameters>hostName='{vds[0]}', spm_priority='11', ip='{host}', user='root', password='{password}'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priority to -2</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriorityInDB</test_action>
   <parameters>hostName='{vds[0]}', spm_priority='-2', ip='{host}', user='root', password='{password}'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove host</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136454</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_136466</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create hosts</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds}', root_password='{vds_password}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{vds_password})</run>
</test_case>
<test_case>
   <test_name>Wait until all hosts are up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}, {vds[1]}, {vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check randomness of SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMElectionRandomness</test_action>
   <parameters>hosts='[vds]', spm_priority='1'</parameters>
   <positive>TRUE</positive>
   <run></run>
</test_case>
<test_case>
   <test_name>Activate the first host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set the first host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove hosts</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136466</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_136468</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
<!-- BZ 843798 -->
   <run>no</run>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create hosts</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds}', root_password='{vds_password}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{vds_password})</run>
</test_case>
<test_case>
   <test_name>Wait until all hosts are up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}, {vds[1]}, {vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priorities</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds}', spmPriority='{spms_ninth_tc}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{spms_ninth_tc})</run>
</test_case>
<test_case>
   <test_name>Set hosts to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate hosts</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priority to -1 in DB for the third host</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriorityInDB</test_action>
   <parameters>hostName='{vds[2]}', spm_priority='-1', ip='{host}', user='root', password='{password}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Restart vdsm service on the third host</test_name>
   <test_type>rest</test_type>
   <test_action>toggleServiceOnHost</test_action>
   <parameters>host='{vds[2]}', user='root', password='{vds_password[2]}', service='vdsmd', action='restart'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMPresence</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priority to 2 in DB for the first host</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriorityInDB</test_action>
   <parameters>hostName='{vds[0]}', spm_priority='2', ip='{host}', user='root', password='{password}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Restart vdsm service on the third host</test_name>
   <test_type>rest</test_type>
   <test_action>toggleServiceOnHost</test_action>
   <parameters>host='{vds[0]}', user='root', password='{vds_password[0]}', service='vdsmd', action='restart'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set hosts to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove hosts</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136468</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_136477</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
<!--   BZ 845302 -->
   <run>no</run>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create hosts</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds}', root_password='{vds_password}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{vds_password})</run>
</test_case>
<test_case>
   <test_name>Wait until all hosts are up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}, {vds[1]}, {vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set IPMI to the third host</test_name>
   <test_type>rest</test_type>
   <test_action>updateHost</test_action>
   <parameters>host='{vds[2]}', pm='true', pm_type='{pm_type}', pm_address='{pm_address}', pm_username='{pm_user}', pm_password='{pm_password}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priorities</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds}', spmPriority='{spms_fencing}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds},{spms_fencing})</run>
</test_case>
<test_case>
   <test_name>Deactivate hosts</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate the third host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate the second host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[1]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Activate the first host</test_name>
   <test_type>rest</test_type>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Fence the third host</test_name>
   <test_type>rest</test_type>
   <test_action>fenceHost</test_action>
   <parameters>host='{vds[2]}', fence_type='restart'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check hosts for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkHostsForSPM</test_action>
   <parameters>hosts='[vds]', expected_spm_host='{vds[1]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set hosts to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHosts</test_action>
   <parameters>hosts='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove hosts</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_136477</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>START_GROUP: TC_138270</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
<test_case>
   <test_name>Create data center</test_name>
   <test_type></test_type>
   <test_action>addDataCenter</test_action>
   <parameters>name='SpmDC', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create cluster with default parameters</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='SpmCluster', cpu='{cpu_name}', data_center='SpmDC', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create host</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds[0]}', root_password='{vds_password[0]}', cluster='SpmCluster', wait=False</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Wait until host is up</test_name>
   <test_type>rest</test_type>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Create NFS data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', address='{data_domain_address[0]}', host='{vds[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>iSCSI discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>iSCSI login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address[0]}', target='{lun_target[0]}'</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create iSCSI data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun[0]}', lun_address='{lun_address[0]}', lun_target='{lun_target[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_iscsi}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Create FCP data storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='DataDomain', type='e{storage_dom_type_data}', storage_type='e{storage_type_fcp}', host='{vds[0]}', lun='{lun[0]}', lun_port=3260</parameters>
   <positive>true</positive>
   <run>if('{storage_type}'=='e{storage_type_fcp}')</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Attach data storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>attachStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', datacenter='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priority for host to -1</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds[0]}', spmPriority='-1'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Reactivate host</test_name>
   <test_type>rest</test_type>
   <test_action>reactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check host for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMPresence</test_action>
   <parameters>hosts='{vds[0]}'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Reactivate host</test_name>
   <test_type>rest</test_type>
   <test_action>reactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check host for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMPresence</test_action>
   <parameters>hosts='{vds[0]}'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
<test_name>Reactivate host</test_name>
   <test_type>rest</test_type>
   <test_action>reactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check host for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMPresence</test_action>
   <parameters>hosts='{vds[0]}'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Restart vdsm service on host</test_name>
   <test_type>rest</test_type>
   <test_action>toggleServiceOnHost</test_action>
   <parameters>host='{vds[0]}', user='root', password='{vds_password[0]}', service='vdsmd', action='restart'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check host for SPM</test_name>
   <test_type>rest</test_type>
   <test_action>checkSPMPresence</test_action>
   <parameters>hosts='{vds[0]}'</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set SPM priority in order to remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>setSPMPriority</test_action>
   <parameters>hostName='{vds[0]}', spmPriority='1'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Reactivate host</test_name>
   <test_type>rest</test_type>
   <test_action>reactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Sleep for SPM election</test_name>
   <test_type>rest</test_type>
   <test_action>sleep</test_action>
   <parameters>seconds=45</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Deactivate storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='SpmDC', storagedomain='DataDomain'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove data center</test_name>
   <test_type>rest</test_type>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='SpmDC'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove storage domain</test_name>
   <test_type>rest</test_type>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='DataDomain', host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Set host to maintenance</test_name>
   <test_type>rest</test_type>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove host</test_name>
   <test_type>rest</test_type>
   <test_action>removeHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove cluster</test_name>
   <test_type>rest</test_type>
   <test_action>removeClusters</test_action>
   <parameters>clusters='SpmCluster'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: TC_138270</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <report/>
</test_case>
</input>
