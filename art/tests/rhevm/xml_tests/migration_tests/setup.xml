<?xml version="1.0" encoding="UTF-8"?>
<!-- vim: set ts=3 sw=3 expandtab: -->
<?xml-stylesheet type="text/xsl" href="table.xslt"?>

<input pydocs="/home/jhenner/work/rest-api-tests/html_editor/docs.txt">
<!-- <span style="display:none" >TEST_DESCRIPTION</span>
   Tests of migration functionality.
   Including manual migration, maintained host, cluster policies, migration between clusters and negative tests
   Requirements: 2 hosts, 16 macs(vms)
-->
<test_case>
   <test_name>START_GROUP: migrations_set-up</test_name>
   <test_action/>
   <parameters></parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create Data Center</test_name>
   <test_action>addDataCenter</test_action>
   <parameters>name='{datacenter1_name}', local={local}, version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create Cluster</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='{cluster1_name}', cpu='{cpu_name}', version='{compatibility_version}', data_center='{datacenter1_name}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
 <test_case>
   <test_name>Add Host</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds}', root_password='{vds_password}', cluster='{cluster1_name}', wait=False</parameters>
   <positive>TRUE</positive>
   <run>forkfor({vds},{vds_password})</run>
</test_case>
<test_case>
   <test_name>Wait for all hosts are UP</test_name>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='[vds]'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <vital>true</vital>
</test_case>
<test_case>
   <test_name>iSCSI Discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address}'</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>iSCSI Login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address}', target='{lun_target}'</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>Create Data Storage Domain iSCSI</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='{storagedomain1}', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun}', lun_address='{lun_address}', lun_target='{lun_target}', lun_port=3260</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>Create Data Storage Domain NFS</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='{storagedomain1}', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', host='{vds[0]}', address='{data_domain_address[0]}', path='{data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_nfs}')</run>
</test_case>
<test_case>
   <test_name>Sleep to give hosts time to add the storage.</test_name>
   <test_action>sleep</test_action>
   <parameters>seconds=10</parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Attach Master Data Storage Domain to Data Center</test_name>
   <test_action>attachStorageDomain</test_action>
   <parameters>datacenter='{datacenter1_name}', storagedomain='{storagedomain1}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Wait for SPM election complete</test_name>
   <test_action>waitForSPM</test_action>
   <parameters>datacenter='{datacenter1_name}', timeout=240, sleep=5</parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Check no error events occured after SPM detected.</test_name>
   <test_action>searchForRecentEvent</test_action>
   <parameters>win_start_query='Migrations_DC type=950', query='severity>=error and type!=9000', expected_count=0</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Sleep to give hosts time to connect the storage.</test_name>
   <test_action>sleep</test_action>
   <parameters>seconds=3</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Check no error events occured after SPM detected and sleeping.</test_name>
   <test_action>searchForRecentEvent</test_action>
   <parameters>win_start_query='Migrations_DC type=950', query='severity>=error and type!=9000', expected_count=0</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='Migrations_VM-#loop_index', vmDescription='Foo bar baz', cluster='{cluster1_name}', storageDomainName='{storagedomain1}', size=3221225472, nic='nic1', memory=536870912, cpu_cores={cpu_cores}, cpu_socket={cpu_socket}, display_type='{display_type}', network='{mgmt_bridge}'</parameters>
   <positive>TRUE</positive>
   <run>loop(5)</run>
   <vital>true</vital>
</test_case>
<test_case>
   <test_name>Install RHEL</test_name>
   <test_action>unattendedInstallation</test_action>
   <parameters>vm='Migrations_VM-#loop_index', nic='nic1', image='{cobbler_profile}', cobblerAddress='{cobbler_address}', cobblerUser='{cobbler_user}', cobblerPasswd='{cobbler_passwd}'</parameters>
   <positive>TRUE</positive>
   <run>forkfor(5)</run>
</test_case>
<test_case>
   <test_name>Wait for all vms are UP</test_name>
   <test_action>waitForVmsStates</test_action>
   <description>fix it to work with dynamic range (0-4)</description>
   <parameters>names='Migrations_VM-0 Migrations_VM-1 Migrations_VM-2 Migrations_VM-3 Migrations_VM-4'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Wait for GuestInfo IP address</test_name>
   <test_action>waitUntilVmQuery</test_action>
   <parameters>vm='Migrations_VM-#loop_index', query='ip!=""', timeout=2400, sleep=10</parameters>
   <positive>NONE</positive>
   <run>loop(5)</run>
</test_case>
<test_case>
   <test_name>Sleep</test_name>
   <test_action>sleep</test_action>
   <parameters>seconds=30</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>END_GROUP: migrations_set-up</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
</input>
<!--####################################################################### -->
