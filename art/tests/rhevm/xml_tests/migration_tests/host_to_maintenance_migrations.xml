<?xml version="1.0" encoding="UTF-8"?>
<!-- vim: set ts=3 sw=3 expandtab: -->
<?xml-stylesheet type="text/xsl" href="table.xslt"?>

<input pydocs="/home/jhenner/work/rest-api-tests/html_editor/docs.txt">
<!-- <span style="display:none" >TEST_DESCRIPTION</span>
   Tests of migration functionality.
   Including manual migration, maintained host, cluster policies, migration between clusters and negative tests
   Requirements: 2 hosts, 16 macs(vms)
-->
<test_case>
   <test_name>START_GROUP: host_to_maintenance_migrations</test_name>
   <test_description>
      This will cause all VMsto move from one host to another one. This
      checks whether all VMs can fit into each of the hosts, but only in case
      of having two hosts.
   </test_description>
   <test_action/>
   <parameters></parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Switch first host to maitenance</test_name>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <bz>996146</bz>
</test_case>
<test_case>
   <test_name>Check if host status maintenance</test_name>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}', states='e{host_state_maintenance}', timeout=600</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <bz>996146</bz>
</test_case>
<test_case>
   <test_name>Switch first host to UP</test_name>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <bz>996146</bz>
<test_case>
   <test_name>Check if host status is up</test_name>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[0]}', states='e{host_state_up}', timeout=600</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <bz>996146</bz>
</test_case>
</test_case>
<test_case>
   <test_name>Switch second host to maitenance</test_name>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[1]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <bz>996146</bz>
</test_case>
<test_case>
   <test_name>Check if host status is maintenance</test_name>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[1]}', states='e{host_state_maintenance}', timeout=600</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <bz>996146</bz>
</test_case>
<test_case>
   <test_name>Switch second host to UP</test_name>
   <test_action>activateHost</test_action>
   <parameters>host='{vds[1]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <bz>996146</bz>
</test_case>
<test_case>
   <test_name>Check if host status is up</test_name>
   <test_action>waitForHostsStates</test_action>
   <parameters>names='{vds[1]}', states='e{host_state_up}', timeout=600</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <bz>996146</bz>
</test_case>
<test_case>
   <test_name>END_GROUP: host_to_maintenance_migrations</test_name>
   <test_action/>
   <parameters></parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
</input>
