<input>
<test_case>
  <test_name>START_GROUP:PrepareSetup</test_name>
  <test_action/>
  <parameters/>
  <positive>NONE</positive>
  <run>yes</run>
  <fetch_output/>
  <report/>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
  <test_name>Create Data Center NFS</test_name>
  <test_action>addDataCenter</test_action>
  <parameters>name='{datacenter}',storage_type='e{storage_type_nfs}',version='{comp_version}'</parameters>
  <positive>TRUE</positive>
  <run>if('{data_center_type}'=='e{storage_type_nfs}')</run>
  <fetch_output/>
  <report>YES</report>
  <vital>TRUE</vital>
  <test_description/>
</test_case>
<test_case>
  <test_name>Create Data Center ISCSI</test_name>
  <test_action>addDataCenter</test_action>
  <parameters>name='{datacenter}#loop_index',storage_type='e{storage_type_iscsi}',version='{comp_version}'</parameters>
  <positive>TRUE</positive>
  <run>if('{data_center_type}'=='e{storage_type_iscsi}')</run>
  <run>loop({comp_version})</run>
  <fetch_output/>
  <report>YES</report>
  <vital>TRUE</vital>
  <test_description/>
</test_case>
<test_case>
  <test_name>Create Cluster</test_name>
  <test_action>addCluster</test_action>
  <parameters>name='{cluster}#loop_index',cpu='{cpu_name}',data_center='{datacenter}#loop_index',version='{comp_version}'</parameters>
  <positive>TRUE</positive>
  <run>YES</run>
  <run>loop({comp_version})</run>
  <fetch_output/>
  <report>YES</report>
  <vital>TRUE</vital>
  <test_description/>
</test_case>
<test_case>
  <test_name>Adding Host</test_name>
  <test_action>addHost</test_action>
  <parameters>name='{vds}',root_password='{vds_password[0]}',cluster='{cluster}#loop_index',vdcPort='{port}'</parameters>
  <positive>TRUE</positive>
  <run>forkfor({vds})</run>
  <fetch_output/>
  <report>YES</report>
  <vital>TRUE</vital>
  <test_description/>
</test_case>
<test_case>
 <test_name>Add Data Storage Domain iSCSI</test_name>
 <test_action>addISCSIDataDomain</test_action>
 <parameters>host='{vds[0]}',storage='{storage}0',data_center='{datacenter}0',lun='{lun[0]}',lun_address='{lun_address[0]}',lun_target='{lun_target[0]}'</parameters>
 <positive>NONE</positive>
 <run>if('{data_center_type}'=='e{storage_type_iscsi}')</run>
 <fetch_output/>
 <report>YES</report>
 <vital>TRUE</vital>
 <test_description/>
</test_case>
<test_case>
 <test_name>Add Data Storage Domain iSCSI</test_name>
 <test_action>addISCSIDataDomain</test_action>
 <parameters>host='{vds[1]}',storage='{storage}1',data_center='{datacenter}1',lun='{lun[1]}',lun_address='{lun_address[1]}',lun_target='{lun_target[1]}'</parameters>
 <positive>NONE</positive>
 <run>if('{data_center_type}'=='e{storage_type_iscsi}')</run>
 <fetch_output/>
 <report>YES</report>
 <vital>False</vital>
 <test_description/>
</test_case>
<test_case>
   <test_name>Create NFS export storage domain</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='ImpExp_{data_center_type}',type='e{storage_dom_type_export}',storage_type='e{storage_type_nfs}',address='{export_domain_address[0]}' ,host='{vds[0]}',path='{export_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
</test_case>
<test_case>
   <test_name>Attach export storage domain to data center '{datacenter}0'</test_name>
   <test_action>attachStorageDomain</test_action>
   <parameters>datacenter='{datacenter}0',storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <vital>TRUE</vital>
</test_case>
<test_case>
   <test_name>Activate export storage domain '{datacenter}0'</test_name>
   <test_action>activateStorageDomain</test_action>
   <parameters>datacenter='{datacenter}0',storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <vital>TRUE</vital>
</test_case>
<test_case>
  <test_name>Create sw1 Logical Network</test_name>
  <test_action>addNetwork</test_action>
  <parameters>name='{networks[0]}',data_center='{datacenter}#loop_index'</parameters>
  <positive>TRUE</positive>
  <run>yes</run>
  <run>loop(2)</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Edit sw1 network</test_name>
   <test_action>updateNetwork</test_action>
   <parameters>network='{networks[0]}',data_center='{datacenter}#loop_index',vlan_id='1'</parameters>
   <positive>True</positive>
   <run>yes</run>
   <run>loop(2)</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description>Should be able to edit sw1</test_description>
</test_case>
<test_case>
  <test_name>Create Logical Network sw2</test_name>
  <test_action>addNetwork</test_action>
  <parameters>name='{networks[1]}',data_center='{datacenter}#loop_index'</parameters>
  <positive>TRUE</positive>
  <run>yes</run>
  <run>loop(2)</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
  <test_name>Create Logical Network sw3</test_name>
  <test_action>addNetwork</test_action>
  <parameters>name='{networks[2]}',data_center='{datacenter}0'</parameters>
  <positive>TRUE</positive>
  <run>yes</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Attach sw1 to Clusters</test_name>
   <test_action>addNetworkToCluster</test_action>
   <parameters>network='{networks[0]}', cluster='{cluster}#loop_index', required='false'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <run>loop(2)</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Attach sw2 to Clusters</test_name>
   <test_action>addNetworkToCluster</test_action>
   <parameters>network='{networks[1]}', cluster='{cluster}#loop_index', required='false'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <run>loop(2)</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Attach sw3 to Cluster in 3.0</test_name>
   <test_action>addNetworkToCluster</test_action>
   <parameters>network='{networks[2]}', cluster='{cluster}0', required='false'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>add sw1 to hosts eth1</test_name>
   <test_action>attachHostNic</test_action>
   <parameters>host='{vds}',nic='{host_nics[1]}',network='{networks[0]}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>add sw2 to hosts eth2</test_name>
   <test_action>attachHostNic</test_action>
   <parameters>host='{vds}',nic='{host_nics[2]}',network='{networks[1]}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Add sw3 to hosts 1 eth3</test_name>
   <test_action>attachHostNic</test_action>
   <parameters>host='{vds[0]}',nic='{host_nics[3]}',network='{networks[2]}'</parameters>
   <positive>TRUE</positive>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Convert Os name to Os type element </test_name>
   <test_action>convertOsNameToOsTypeElement</test_action>
   <parameters>osName='{vm_os}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output>osTypeElement-&gt;osTypeElement</fetch_output>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get RHEL boot Os</test_name>
   <test_action>getImageByOsType</test_action>
   <parameters>osType=%osTypeElement%,slim=True</parameters>
   <positive>TRUE</positive>
   <run>if(re.search('RHEL',%osTypeElement%))</run>
   <fetch_output>osBoot-&gt;osBoot</fetch_output>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>

<test_case>
   <test_name>Create Linux VMs with 3 NICs for Cluster in 3.0 and Cluster in 3.1</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='{vm_name[#loop_index]}',vmDescription='linux vm',cluster='{cluster}#loop_index',nic='nic1',nicType='e{nic_type_virtio}',storageDomainName='{storage}#loop_index',size=21474836480,diskType='e{disk_type_system}',display_type='e{display_type_spice}',cobblerAddress='{cobbler_address}',cobblerUser='{cobbler_user}',cobblerPasswd='{cobbler_passwd}'</parameters>
   <positive>TRUE</positive>
   <run>if(re.search('RHEL',%osTypeElement%))</run>
   <run>loop(2)</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create Linux VMs with 4 NICs for Cluster in 3.0</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='{vm_name[2]}',vmDescription='linux vm',cluster='{cluster}0',nic='nic1',nicType='e{nic_type_virtio}',storageDomainName='{storage}0',size=21474836480,diskType='e{disk_type_system}',display_type='e{display_type_spice}',cobblerAddress='{cobbler_address}',cobblerUser='{cobbler_user}',cobblerPasswd='{cobbler_passwd}'</parameters>
   <positive>TRUE</positive>
   <run>if(re.search('RHEL',%osTypeElement%))</run>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Add virtio nic2 to 3 VMs</test_name>
   <test_action>addNic</test_action>
   <parameters>vm='{vm_name[#loop_index]}', name='nic2', network='{networks[0]}', interface='e{nic_type_virtio}'</parameters>
   <positive>true</positive>
   <run>yes</run>
   <run>loop(3)</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Add virtio nic3 to 3 VMs</test_name>
   <test_action>addNic</test_action>
   <parameters>vm='{vm_name[#loop_index]}', name='nic3', network='{networks[1]}', interface='e{nic_type_virtio}'</parameters>
   <positive>true</positive>
   <run>yes</run>
   <run>loop(3)</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Add virtio nic4 to 1 VM</test_name>
   <test_action>addNic</test_action>
   <parameters>vm='{vm_name[2]}', name='nic4', network='{networks[2]}', interface='e{nic_type_virtio}'</parameters>
   <positive>true</positive>
   <run>yes</run>
   <report>yes</report>
</test_case>
<test_case>
   <test_name>Install Linux Vms With Unattended</test_name>
   <test_action>unattendedInstallation</test_action>
   <parameters>vm='{vm_name[#loop_index]}',image=%osBoot%,cobblerAddress='{cobbler_address}', cobblerUser='{cobbler_user}', cobblerPasswd='{cobbler_passwd}'</parameters>
   <positive>TRUE</positive>
   <run>if(re.search('RHEL',%osTypeElement%))</run>
   <run>loop(3)</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get MAC address of 3 VMs</test_name>
   <test_action>getVmMacAddress</test_action>
   <parameters>vm='{vm_name[#loop_index]}',nic='nic1'</parameters>
   <positive>TRUE</positive>
   <run>if(re.search('RHEL',%osTypeElement%))</run>
   <run>loop(3)</run>
   <fetch_output>macAddress-&gt;macAddress#loop_index</fetch_output>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get IP address of 3 VMs</test_name>
   <test_action>convertMacToIpAddress</test_action>
   <parameters>mac=%macAddress#loop_index%</parameters>
   <positive>TRUE</positive>
   <run>if(re.search('RHEL',%osTypeElement%))</run>
   <run>loop(3)</run>
   <fetch_output>ip-&gt;ipAddress#loop_index</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Cobbler remove Macs of 3 VMs</test_name>
   <test_action>cobblerRemoveSystem</test_action>
   <parameters>cobblerAddress='{cobbler_address}',cobblerUser='{cobbler_user}',cobblerPasswd='{cobbler_passwd}',mac=%macAddress#loop_index%</parameters>
   <positive>NONE</positive>
   <run>if(re.search('RHEL',%osTypeElement%))</run>
   <run>loop(3)</run>
   <fetch_output/>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Stop VM</test_name>
   <test_action>stopVm</test_action>
   <parameters>vm='{vm_name[#loop_index]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <run>loop(3)</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create template</test_name>
   <test_action>createTemplate</test_action>
   <parameters>vm='{vm_name[#loop_index]}',name='{template_name}#loop_index',cluster='{cluster}#loop_index'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <run>loop(2)</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create template with 4 NICs</test_name>
   <test_action>createTemplate</test_action>
   <parameters>vm='{vm_name[2]}',name='{template_name}2',cluster='{cluster}0'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Export VM with 3 VNICs</test_name>
   <test_action>exportVm</test_action>
   <parameters>vm='{vm_name[0]}',storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
</test_case>
<test_case>
   <test_name>Export VM with 4 VNICs</test_name>
   <test_action>exportVm</test_action>
   <parameters>vm='{vm_name[2]}',storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
</test_case>
<test_case>
   <test_name>Export template from 3.0 with 3 NICs</test_name>
   <test_action>exportTemplate</test_action>
   <parameters>template='{template_name}0',storagedomain='ImpExp_{data_center_type}', wait=True</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
</test_case>
<test_case>
   <test_name>Export template from 3.0 with 4 NICs</test_name>
   <test_action>exportTemplate</test_action>
   <parameters>template='{template_name}2',storagedomain='ImpExp_{data_center_type}', wait=True</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
</test_case>
<test_case>
    <test_name>Remove Template in 3.0 with 4 NICs</test_name>
    <test_action>removeTemplate</test_action>
    <parameters>template='{template_name}2'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
    <fetch_output/>
    <report>YES</report>
    <vital>FALSE</vital>
    <test_description/>
</test_case>
<test_case>
   <test_name>Remove VM with 3 NICs in 3.0</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Remove VM with 4 NICs in 3.0</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='{vm_name[2]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait for SPM</test_name>
   <test_action>waitForSPM</test_action>
   <parameters>datacenter='{datacenter}0',timeout=900,sleep=5</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>

<test_case>
   <test_name>Deactivate data storage domain</test_name>>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='{datacenter}0', storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Detach data storage domain</test_name>
   <test_action>detachStorageDomain</test_action>
   <parameters>datacenter='{datacenter}0', storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Attach export storage domain to data center '{data_center_type}1'</test_name>
   <test_action>attachStorageDomain</test_action>
   <parameters>datacenter='{datacenter}1',storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <vital>TRUE</vital>
</test_case>
<test_case>
   <test_name>Activate export storage domain '{data_center_type}1'</test_name>
   <test_action>activateStorageDomain</test_action>
   <parameters>datacenter='{datacenter}1',storagedomain='ImpExp_{data_center_type}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <vital>TRUE</vital>
</test_case>

<!-- ====================================================================== -->
 <test_case>
  <test_name>END_GROUP:PrepareSetup</test_name>
  <test_action/>
  <parameters/>
  <positive>NONE</positive>
  <run/>
  <fetch_output/>
  <report/>
  <vital/>
  <test_description/>
</test_case>
</input>
