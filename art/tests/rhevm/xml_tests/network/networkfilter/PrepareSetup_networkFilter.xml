<input>
<test_case>
   <test_name>Create ISCSI DC, Cluster. Adding Host and storage</test_name>
   <test_action>createDatacenter</test_action>
   <parameters>hosts='[vds]', cpuName='{cpu_name}', username='root', password='[vds_password]',
   datacenter='{datacenter}', storage_type='e{storage_type_iscsi}', cluster='{cluster}',
   lun_address='{lun_address}', lun_target='{lun_target}',luns='{lun}',lun_port=3260,
version='{compatibility_version}'
   </parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <report>YES</report>
   <fetch_output/>
   <vital>TRUE</vital>
</test_case>
<test_case>
   <test_name>Wait for SPM</test_name>
   <test_action>waitForSPM</test_action>
   <parameters>datacenter='{datacenter}',timeout=900,sleep=5</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<!-- Setting up a VM -->
<test_case>
   <test_name>Convert Os name to Os type element</test_name>
   <test_action>convertOsNameToOsTypeElement</test_action>
   <parameters>osName='{vm_os}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output>osTypeElement-&gt;osTypeElement</fetch_output>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get RHEL boot Os</test_name>
   <test_action>getImageByOsType</test_action>
   <parameters>osType=%osTypeElement%,slim=True</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output>osBoot-&gt;osBoot</fetch_output>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create Linux Vms</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='{vm_name[0]}',vmDescription='linux vm',cluster='{cluster}',nic='nic1',nicType='e{nic_type_virtio}',
   storageDomainName='DataCenterTest_data_domain0',size=21474836480,diskType='e{disk_type_system}',display_type='e{display_type_spice}',
   cobblerAddress='{cobbler_address}',cobblerUser='{cobbler_user}',cobblerPasswd='{cobbler_passwd}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Install Linux Vms With Unattended</test_name>
   <test_action>unattendedInstallation</test_action>
   <parameters>vm='{vm_name[0]}',image=%osBoot%,cobblerAddress='{cobbler_address}', cobblerUser='{cobbler_user}',
   cobblerPasswd='{cobbler_passwd}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Waiting for VMs to be UP</test_name>
   <test_action>waitForVmsStates</test_action>
   <parameters>names='{vm_name[0]}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get MAC address</test_name>
   <test_action>getVmMacAddress</test_action>
   <parameters>vm='{vm_name[0]}',nic='nic1'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output>macAddress-&gt;macAddress</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get IP address</test_name>
   <test_action>convertMacToIpAddress</test_action>
   <parameters>mac=%macAddress%</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output>ip-&gt;ipAddress</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Validate VIRTIO nic1 is active</test_name>
   <test_action>isVmNicActive</test_action>
   <parameters>vm='{vm_name[0]}', nic='nic1'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
</input>
