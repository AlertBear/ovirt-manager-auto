<input>
<test_case>
   <test_name>Checking that spoofing filter rule enabled</test_name>
   <test_action>checkSpoofingFilterRuleByVer</test_action>
   <parameters>host='{host}',user='{vm_linux_user}',passwd='{vm_linux_password}'</parameters>
   <positive>None</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <tcms_test_case>233972</tcms_test_case>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via vdsm</test_name>
   <test_action>checkNetworkFiltering</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <tcms_test_case>198901</tcms_test_case>
   <test_description/>
</test_case>
<!-- VM is ready for use -->
<test_case>
   <test_name>Checking that network filtering is enabled via dumpxml</test_name>
   <test_action>checkNetworkFilteringDumpxml</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', vm='{vm_name[0]}', nics='1'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <tcms_test_case>198903</tcms_test_case>
   <test_description/>
</test_case>
<test_case>
  <test_name>Add nic2 as RTL8139 with network rhevm</test_name>
  <test_action>addNic</test_action>
  <parameters>vm='{vm_name[0]}',name='nic2', interface='e{nic_type_rtl8139}', network='{mgmt_bridge}', active='true'</parameters>
  <positive>TRUE</positive>
  <run>YES</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Validate RTL8139 nic2 is active</test_name>
   <test_action>isVmNicActive</test_action>
   <parameters>vm='{vm_name[0]}', nic='nic2'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via dumpxml</test_name>
   <test_action>checkNetworkFilteringDumpxml</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', vm='{vm_name[0]}', nics='2'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <tcms_test_case>198914</tcms_test_case>
   <test_description/>
</test_case>
<test_case>
   <test_name>START_GROUP: tcms_test_198920</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get MAC address</test_name>
   <test_action>getVmMacAddress</test_action>
   <parameters>vm='{vm_name[0]}',nic='nic1'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output>macAddress-&gt;macAddress_nic1</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get MAC address</test_name>
   <test_action>getVmMacAddress</test_action>
   <parameters>vm='{vm_name[0]}',nic='nic2'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output>macAddress-&gt;macAddress_nic2</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via ebtables</test_name>
   <test_action>checkNetworkFilteringEbtables</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}',nics='2', vm_macs=[%macAddress_nic1%,%macAddress_nic2%]</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<!-- VM is going down -->
<test_case>
   <test_name>Shutdown VMs</test_name>
   <test_action>stopVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait for VM to Shutdown (status DOWN)</test_name>
   <test_action>waitForVMState</test_action>
   <parameters>vm='{vm_name[0]}',state='down',sleep=1,timeout=120</parameters>
   <positive>NONE</positive>
   <run>forkfor({vm_name})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via ebtables</test_name>
   <test_action>checkNetworkFilteringEbtables</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', nics='2', vm_macs=[%macAddress_nic1%,%macAddress_nic2%]</parameters>
   <positive>FALSE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: tcms_test_198920</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <tcms_test_case>198920</tcms_test_case>
   <test_description/>
</test_case>
<test_case>
   <test_name>START_GROUP: tcms_test_198966</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>NO</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_descriptio/>
</test_case>
<!-- Starting UP the vms -->
<test_case>
   <test_name>Start VM</test_name>
   <test_action>startVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait for VM to start (status UP)</test_name>
   <test_action>waitForVMState</test_action>
   <parameters>vm='{vm_name[0]}',state='up',sleep=1,timeout=120</parameters>
   <positive>NONE</positive>
   <run>forkfor({vm_name})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
  <test_name>Deactivate nic2 while VM is up</test_name>
  <test_action>hotUnplugNic</test_action>
  <parameters>vm='{vm_name[0]}',nic='nic2'</parameters>
  <positive>True</positive>
  <run>YES</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Validate nic2 is inactive while vm is up</test_name>
   <test_action>isVmNicActive</test_action>
   <parameters>vm='{vm_name[0]}', nic='nic2'</parameters>
   <positive>FALSE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
  <test_name>Remove inactive nic2 while VM is up</test_name>
  <test_action>removeNic</test_action>
  <parameters>vm='{vm_name[0]}',nic='nic2'</parameters>
  <positive>True</positive>
  <run>YES</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via ebtables</test_name>
   <test_action>checkNetworkFilteringEbtables</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', nics='1', vm_macs=[%macAddress_nic1%]</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
  <test_name>Add nic2 as RTL8139 with network rhevm</test_name>
  <test_action>addNic</test_action>
  <parameters>vm='{vm_name[0]}',name='nic2', interface='e{nic_type_rtl8139}', network='{mgmt_bridge}', active='true'</parameters>
  <positive>TRUE</positive>
  <run>YES</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Validate RTL8139 nic2 is active</test_name>
   <test_action>isVmNicActive</test_action>
   <parameters>vm='{vm_name[0]}', nic='nic2'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get MAC address</test_name>
   <test_action>getVmMacAddress</test_action>
   <parameters>vm='{vm_name[0]}',nic='nic2'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output>macAddress-&gt;macAddress_nic2</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via ebtables</test_name>
   <test_action>checkNetworkFilteringEbtables</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', nics='2', vm_macs=[%macAddress_nic1%, %macAddress_nic2%]</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
  <test_name>Deactivate nic2 while VM is up</test_name>
  <test_action>hotUnplugNic</test_action>
  <parameters>vm='{vm_name[0]}',nic='nic2'</parameters>
  <positive>True</positive>
  <run>YES</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Validate nic2 is inactive while vm is up</test_name>
   <test_action>isVmNicActive</test_action>
   <parameters>vm='{vm_name[0]}', nic='nic2'</parameters>
   <positive>FALSE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
  <test_name>Remove inactive nic2 while VM is up</test_name>
  <test_action>removeNic</test_action>
  <parameters>vm='{vm_name[0]}',nic='nic2'</parameters>
  <positive>True</positive>
  <run>YES</run>
  <fetch_output/>
  <report>YES</report>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via ebtables</test_name>
   <test_action>checkNetworkFilteringEbtables</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', nics='1', vm_macs=[%macAddress_nic1%]</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Stop VM</test_name>
   <test_action>stopVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait for VM to Shutdown (status DOWN)</test_name>
   <test_action>waitForVMState</test_action>
   <parameters>vm='{vm_name[0]}',state='down',sleep=1,timeout=120</parameters>
   <positive>NONE</positive>
   <run>forkfor({vm_name})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: tcms_test_198966</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <tcms_test_case>198966</tcms_test_case>
   <test_description/>
</test_case>
<test_case>
   <test_name>START_GROUP: tcms_test_203261</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_descriptio/>
</test_case>
<test_case>
   <test_name>Disabling network filter</test_name>
   <test_action>setNetworkFilterStatus</test_action>
   <parameters>enable='False', host='{host}', user='{vm_linux_user}', passwd='{vm_linux_password}', version='{compatibility_version}'</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Start VM</test_name>
   <test_action>startVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>True</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait for VM to start (status UP)</test_name>
   <test_action>waitForVMState</test_action>
   <parameters>vm='{vm_name[0]}',state='up',sleep=1,timeout=120</parameters>
   <positive>NONE</positive>
   <run>forkfor({vm_name})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via dumpxml</test_name>
   <test_action>checkNetworkFilteringDumpxml</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', vm='{vm_name[0]}', nics='1'</parameters>
   <positive>False</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that network filtering is enabled via ebtables</test_name>
   <test_action>checkNetworkFilteringEbtables</test_action>
   <parameters>host='{vds}',user='{vm_linux_user}',passwd='{vm_linux_password}', nics='1', vm_macs=[%macAddress_nic1%]</parameters>
   <positive>False</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: tcms_test_203261</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <tcms_test_case>203261</tcms_test_case>
   <test_description/>
</test_case>
</input>
