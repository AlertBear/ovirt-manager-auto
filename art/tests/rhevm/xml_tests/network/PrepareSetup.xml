<input>
<test_case>
  <test_name>START_GROUP:PrepareSetup</test_name>
  <test_action/>
  <parameters/>
  <positive>NONE</positive>
  <run>yes</run>
  <fetch_output/>
  <report/>
  <vital>FALSE</vital>
  <test_description/>
</test_case>
<test_case>
   <test_name>Prepare ISCSI DC with cluster, storage, and host</test_name>
   <test_action>createDatacenter</test_action>
   <parameters>hosts='[vds]', cpuName='{cpu_name}', username='root', password='[vds_password]', datacenter='{datacenter}', storage_type='e{storage_type_iscsi}', cluster='{cluster}', lun_address='[lun_address]', lun_target='[lun_target]', luns='[lun]', lun_port=3260, version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <report>YES</report>
   <fetch_output/>
   <vital>TRUE</vital>
</test_case>
<test_case>
   <test_name>Clear hosts network interfaces</test_name>
   <test_action>sendSNRequest</test_action>
   <parameters>host='{vds}',auto_nics=['{host_nics[0]}'],check_connectivity='true', connectivity_timeout=60, force='false'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description>Send automatic MGMT interface.</test_description>
</test_case>
<test_case>
    <test_name>Save Network Configuration</test_name>
    <test_action>commitNetConfig</test_action>
    <parameters>host='{vds}'</parameters>
    <positive>TRUE</positive>
    <run>loop({vds})</run>
    <fetch_output/>
    <report>YES</report>
    <vital>FALSE</vital>
    <test_description/>
</test_case>
<!-- ====================================================================== -->
<test_case>
   <test_name>START_GROUP: PrepareVMTemplate</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>if({vm_network})</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description>Prepare linux VM template</test_description>
</test_case>
<test_case>
   <test_name>Convert Os name to Os type element </test_name>
   <test_action>convertOsNameToOsTypeElement</test_action>
   <parameters>osName='{vm_os}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <report>NO</report>
   <fetch_output>osTypeElement-&gt;osTypeElement</fetch_output>
</test_case>
<test_case>
   <test_name>Create Linux Vm</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='{vm_name[0]}',vmDescription='linux vm',cluster='{cluster}',nic='nic1',nicType='e{nic_type_virtio}',display_type='e{display_type_spice}',storageDomainName='DataCenterTest_data_domain0',size=21474836480,diskType='e{disk_type_system}',os_type=%osTypeElement%,user='{vm_linux_user}',password='{vm_linux_password}', installation=True,image='{cobbler_profile}',attempt=600,interval=2,cobblerAddress='{cobbler_address}',cobblerUser='{cobbler_user}',cobblerPasswd='{cobbler_passwd}', network='{mgmt_bridge}', useAgent='{useAgent}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get MAC address</test_name>
   <test_action>getVmMacAddress</test_action>
   <parameters>vm='{vm_name[0]}',nic='nic1'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output>macAddress-&gt;macAddress</fetch_output>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Get IP address</test_name>
   <test_action>convertMacToIpAddress</test_action>
   <parameters>mac=%macAddress%</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output>ip-&gt;ipAddress</fetch_output>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Set Persistent Network on linux VM</test_name>
   <test_action>setPersistentNetwork</test_action>
   <parameters>host=%ipAddress%, password='{vm_linux_password}'</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Stop VM</test_name>
   <test_action>stopVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Create template</test_name>
   <test_action>createTemplate</test_action>
   <parameters>vm='{vm_name[0]}',name='{template_name}',cluster='{cluster}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Remove VM</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait for SPM</test_name>
   <test_action>waitForSPM</test_action>
   <parameters>datacenter='{datacenter}',timeout=900,sleep=5</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: PrepareVMTemplate</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<test_case>
  <test_name>END_GROUP:PrepareSetup</test_name>
  <test_action/>
  <parameters/>
  <positive>NONE</positive>
  <run/>
  <fetch_output/>
  <report/>
  <vital/>
  <test_description/>
</test_case>
</input>
