<input>
<test_case>
   <test_name>Create VM from template</test_name>
   <test_action>addVm</test_action>
   <parameters>name='{vm_name[0]}',cluster='{cluster}',template='{template_name}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Start VM</test_name>
   <test_action>startVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>START_GROUP: Migration</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<test_case>
   <test_name>START_GROUP: Positive_Migration</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<test_case>
   <test_name>START_GROUP: ClusterPolicy</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description>Check VM connectivity after automatic migration caused by non operational host</test_description>
</test_case>
<test_case>
   <test_name>Create sw1 network</test_name>
   <test_action>addNetwork</test_action>
   <parameters>name='{networks[0]}',data_center='{datacenter}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Attach sw1 to Cluster</test_name>
   <test_action>addNetworkToCluster</test_action>
   <parameters>network='{networks[0]}', cluster='{cluster}',required='true'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>generate sw1 network element</test_name>
   <test_action>genSNNic</test_action>
   <parameters>nic='{host_nics[1]}', network='{networks[0]}'</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output>host_nic->sw1_nic</fetch_output>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Add sw1 to Hosts</test_name>
   <test_action>sendSNRequest</test_action>
   <parameters>host='{vds}',nics=[%sw1_nic%],auto_nics=['{host_nics[0]}'],check_connectivity='true', connectivity_timeout=60, force='false'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description>Send automatic MGMT interface and SW1 network</test_description>
</test_case>
<test_case>
   <test_name>Validate that sw1 status is operational</test_name>
   <test_action>validateNetwork</test_action>
   <parameters>cluster='{cluster}', network='{networks[0]}',tag='status', val='operational'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Check Vm connectivity</test_name>
   <test_action>checkVMConnectivity</test_action>
   <parameters>vm='{vm_name[0]}',osType=%osTypeElement%,attempt=600,interval=2,user='{vm_linux_user}',password='{vm_linux_password}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait till VM is UP</test_name>
   <test_action>waitForVMState</test_action>
   <parameters>vm='{vm_name[0]}',state='up',sleep=1,timeout=120</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Change VM network from management to sw1</test_name>
   <test_action>updateNic</test_action>
   <parameters>vm='{vm_name[0]}',nic='nic1',network='{networks[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Which Host does the VM runs on</test_name>
   <test_action>getVmHost</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output>vmHoster-&gt;hostName</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<!-- Migrating, Cause: Non-operational host : START -->
<test_case>
   <test_name>Turn DOWN eth1</test_name>
   <test_action>ifdownNic</test_action>
   <parameters>host=%hostName%,root_password='{vm_linux_password}',nic='{host_nics[1]}'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Check that Host become NON_OPERATIONAL within 70 sec</test_name>
   <test_action>waitForHostsStates</test_action>
   <!-- TODO: nonoperational change to reasonable constant -->
   <parameters>names=%hostName%, states='nonoperational',timeout=70</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait till VM comes UP after migration</test_name>
   <test_action>waitForVMState</test_action>
   <parameters>vm='{vm_name[0]}',state='up',sleep=1,timeout=120</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Check Vm connectivity</test_name>
   <test_action>checkVMConnectivity</test_action>
   <parameters>vm='{vm_name[0]}',osType=%osTypeElement%,attempt=600,interval=2,user='{vm_linux_user}',password='{vm_linux_password}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Checking that the vm has switched hosts</test_name>
   <test_action>checkVmState</test_action>
   <parameters>vmName='{vm_name[0]}',state='up',host=%hostName%</parameters>
   <positive>FALSE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Turn UP eth1</test_name>
   <test_action>ifupNic</test_action>
   <parameters>host=%hostName%,root_password='{vm_linux_password}',nic='{host_nics[1]}',wait=False</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Activate Host</test_name>
   <test_action>activateHost</test_action>
   <parameters>host=%hostName%</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Check that eth1 is UP</test_name>
   <test_action>waitForHostNicState</test_action>
   <parameters>host=%hostName%,nic='{host_nics[1]}',state='up',interval=5, attempts=10</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<!-- Migrating, Cause: Non-operational host : END -->
<!-- Migrating, Cause: Initiative migrating : START -->
<test_case>
   <test_name>Which Host does the VM runs on</test_name>
   <test_action>getVmHost</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output>vmHoster-&gt;hostName</fetch_output>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Migrating vm from one host to another</test_name>
   <test_action>migrateVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>NO</report>
   <vital>TRUE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait till VM comes UP after migration</test_name>
   <test_action>waitForVMState</test_action>
   <parameters>vm='{vm_name[0]}',state='up',sleep=1,timeout=120</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Check Vm connectivity</test_name>
   <test_action>checkVMConnectivity</test_action>
   <parameters>vm='{vm_name[0]}',osType=%osTypeElement%,attempt=600,interval=2,user='{vm_linux_user}',password='{vm_linux_password}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<!-- Migrating, Cause: Initiative migrating : END -->
<test_case>
   <test_name>Shutdown Vm</test_name>
   <test_action>stopVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Remove Vm</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='{vm_name[0]}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Detach sw1 from cluster</test_name>
   <test_action>removeNetworkFromCluster</test_action>
   <parameters>network='{networks[0]}', cluster='{cluster}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Remove sw1 from hosts</test_name>
   <test_action>sendSNRequest</test_action>
   <parameters>host='{vds}',auto_nics=['{host_nics[0]}'],check_connectivity='true', connectivity_timeout=60, force='false'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description>Send automatic MGMT interface.</test_description>
</test_case>
<test_case>
   <test_name>Save Network Configuration</test_name>
   <test_action>commitNetConfig</test_action>
   <parameters>host='{vds}'</parameters>
   <positive>TRUE</positive>
   <run>loop({vds})</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Remove sw1 from DataCenter</test_name>
   <test_action>removeNetwork</test_action>
   <parameters>network='{networks[0]}',data_center='{datacenter}'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>YES</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>Wait for SPM</test_name>
   <test_action>waitForSPM</test_action>
   <parameters>datacenter='{datacenter}',timeout=900,sleep=5</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output/>
   <report>NO</report>
   <vital>FALSE</vital>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: ClusterPolicy</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: Positive_Migration</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<!-- ======================================================================================================== -->
<test_case>
   <test_name>START_GROUP: Negative_Migration</test_name>
   <test_action/>
   <parameters>n/a1</parameters>
   <positive>NONE</positive>
   <run>YES</run>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: Negative_Migration</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
<test_case>
   <test_name>END_GROUP: Migration</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
   <fetch_output/>
   <report/>
   <vital/>
   <test_description/>
</test_case>
</input>
