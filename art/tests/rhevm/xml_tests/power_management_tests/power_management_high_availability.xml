<?xml-stylesheet type="text/xsl" href="table.xslt"?>
<input>
<!--************Setup two vms***************-->
<test_case>
    <test_name>START_GROUP: SETUP-VMS</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>None</positive>
    <run>Yes</run>
</test_case>
<test_case>
    <test_name>Create Data Storage Domain NFS</test_name>
    <test_action>addStorageDomain</test_action>
    <parameters>name='{storage_domain_name}',type='e{storage_dom_type_data}',storage_type='e{storage_type_nfs}',address='{data_domain_address}',host='{vds[0]}',path='{data_domain_path}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Attach Data Storage Domain to Data Center</test_name>
    <test_action>attachStorageDomain</test_action>
    <parameters>datacenter='{data_center_name}',storagedomain='{storage_domain_name}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Create VM With High Availibility</test_name>
    <test_action>addVm</test_action>
    <parameters>name='restvm_high', cluster='{cluster_name}_0', type='e{vm_type_server}', highly_available='true', placement_affinity='migratable', placement_host='{vds[1]}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Create VM With Default Parameters</test_name>
    <test_action>addVm</test_action>
    <parameters>name='restvm', cluster='{cluster_name}_0', placement_affinity='migratable', placement_host='{vds[1]}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Add RAW IDE System Disk To VM not preallocated</test_name>
    <test_action>addDiskToVm</test_action>
    <parameters>vm='restvm_high', size=2147483648, type='e{disk_type_system}', format='e{format_raw}', interface='e{interface_ide}', sparse='true', storagedomain='{storage_domain_name}',bootable='true'</parameters>
    <positive>True</positive>
    <run>if(1&lt;len('[vds]'.split(',')))</run>
</test_case>
<test_case>
    <test_name>Add RAW IDE System Disk To VM not preallocated</test_name>
    <test_action>addDiskToVm</test_action>
    <parameters>vm='restvm', size=2147483648, type='e{disk_type_system}', format='e{format_raw}', interface='e{interface_ide}', sparse='true', storagedomain='{storage_domain_name}',bootable='true'</parameters>
    <positive>True</positive>
    <run>if(1&lt;len('[vds]'.split(',')))</run>
</test_case>
<test_case>
    <test_name>Add NIC to VM to allow boot</test_name>
    <test_action>addNic</test_action>
    <parameters>vm='restvm_high', name='nic1', network='rhevm'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Add NIC to VM to allow boot</test_name>
    <test_action>addNic</test_action>
    <parameters>vm='restvm', name='nic1', network='rhevm'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Start VM</test_name>
    <test_action>startVm</test_action>
    <parameters>vm='restvm_high', wait_for_status='e{vm_state_up}'</parameters>
    <positive>True</positive>
    <run>If(1&lt;len('[vds]'.split(',')))</run>
</test_case>
<test_case>
    <test_name>Start VM</test_name>
    <test_action>startVm</test_action>
    <parameters>vm='restvm', wait_for_status='e{vm_state_up}'</parameters>
    <positive>True</positive>
    <run>If(1&lt;len('[vds]'.split(',')))</run>
</test_case>
<test_case>
    <test_name>END_GROUP: SETUP-VMS</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>None</positive>
    <run>Yes</run>
</test_case>
<!--************Fence step(restart)***************-->
<test_case>
    <test_name>START_GROUP: FENCE-HOST-WITH-HIGH-AVAILABILITY-VM</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>None</positive>
    <run>Yes</run>
</test_case>
<test_case>
    <test_name>Check time elapsed from previous PM operation</test_name>
    <test_action>waitForHostPmOperation</test_action>
    <parameters>host='{vds[1]}', dbpassword='{db_password}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Fence host</test_name>
    <test_action>fenceHost</test_action>
    <parameters>host='{vds[1]}', fence_type='e{fence_type_restart}'</parameters>
    <positive>True</positive>
    <vital>TRUE</vital>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Check for status of highly available vm</test_name>
    <test_action>checkVmState</test_action>
    <parameters>vmName='restvm_high', host='{vds[0]}', state='e{vm_state_up}'</parameters>
    <positive>True</positive>
    <run>yes</run>
    <tcms_plan_id>9988</tcms_plan_id>
    <tcms_test_case>289119</tcms_test_case>
</test_case>
<test_case>
    <test_name>Check for status of vm</test_name>
    <test_action>checkVmState</test_action>
    <parameters>vmName='restvm', state='e{vm_state_down}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>END_GROUP: FENCE-HOST-WITH-HIGH-AVAILABILITY-VM</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>None</positive>
    <run>Yes</run>
</test_case>
<!--************Put host with high available vm to non-responsive state***************-->
<test_case>
    <test_name>START_GROUP: PUT-HOST-WITH-HIGH-AVAILABLE-VM-TO-NON-RESPONSIVE-STATE</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>None</positive>
    <run>Yes</run>
</test_case>
<test_case>
    <test_name>Start VM</test_name>
    <test_action>startVm</test_action>
    <parameters>vm='restvm', wait_for_status='e{vm_state_up}'</parameters>
    <positive>True</positive>
    <run>If(1&lt;len('[vds]'.split(',')))</run>
</test_case>
<test_case>
    <test_name>Migrate VM</test_name>
    <test_action>migrateVm</test_action>
    <parameters>vm='restvm_high', host='{vds[1]}'</parameters>
    <positive>True</positive>
    <run>If(1&lt;len('[vds]'.split(',')))</run>
</test_case>
<test_case>
    <test_name>Stop network on host</test_name>
    <test_action>runDelayedControlService</test_action>
    <parameters>host='{vds[1]}', host_user='root', host_passwd='{vds_password[1]}', service='network', command='stop'</parameters>
    <positive>True</positive>
    <run>Yes</run>
</test_case>
<test_case>
    <test_name>Wait until host connecting</test_name>
    <test_action>waitForHostsStates</test_action>
    <parameters>names='{vds[1]}', states='connecting'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Wait until host UP</test_name>
    <test_action>waitForHostsStates</test_action>
    <parameters>names='{vds[1]}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Check for status of normal vm</test_name>
    <test_action>checkVmState</test_action>
    <parameters>vmName='restvm', state='e{vm_state_down}'</parameters>
    <positive>True</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Check for status of highly available vm</test_name>
    <test_action>checkVmState</test_action>
    <parameters>vmName='restvm_high', state='e{vm_state_up}'</parameters>
    <positive>True</positive>
    <run>yes</run>
    <tcms_plan_id>9988</tcms_plan_id>
    <tcms_test_case>289120</tcms_test_case>
</test_case>
<test_case>
    <test_name>END_GROUP: PUT-HOST-WITH-HIGH-AVAILABLE-VM-TO-NON-RESPONSIVE-STATE</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>None</positive>
    <run>Yes</run>
</test_case>
<!--**************************************************-->
<test_case>
   <test_name>Stop VM</test_name>
   <test_action>stopVm</test_action>
   <parameters>vm='restvm_high'</parameters>
   <positive>True</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>Remove Vms</test_name>
   <test_action>removeVms</test_action>
   <parameters>vms='restvm,restvm_high'</parameters>
   <positive>True</positive>
   <run>yes</run>
</test_case>
</input>
