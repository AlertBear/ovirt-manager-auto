<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type="text/xsl" href="table.xslt"?>
<input>
<!--***********************Add vm with custom propertie***********************-->
<test_case>
    <test_name>Create VM to test custom hook</test_name>
    <test_action>addVm</test_action>
    <parameters>name='{vm_prefix}', description='hook test', cluster='{cluster_prefix}', display_type='{display_type}',template='{vm_template_for_test}' ,custom_properties='auto_custom_hook=1234'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Stop vdsmd on the vds host</test_name>
    <test_action>stopVdsmd</test_action>
    <parameters>vds='{vds}', password='{passwd}'</parameters>
    <positive>NONE</positive>
    <run>yes</run>
</test_case>
<!--***********************Create small scripts for testing hooks***********************-->
<test_case>
    <test_name>START_GROUP: CREATE-SCRIPTS-FOR-TESTING-HOOKS</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<test_case>
    <test_name>Create auto_script.sh under /usr/libexec/vdsm/hooks/after_vdsm_stop which creates after_vdsm_stop.hook when run on /var/tmp</test_name>
    <test_action>createOneLineShellScript</test_action>
    <parameters>ip='{vds}', password='{passwd}', scriptName='auto_script.sh', command='touch', arguments='/var/tmp/after_vdsm_stop.hook', target='/usr/libexec/vdsm/hooks/after_vdsm_stop'</parameters>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Create auto_script.sh under /usr/libexec/vdsm/hooks/before_vdsm_start which creates before_vdsm_start.hook when run on /var/tmp</test_name>
    <test_action>createOneLineShellScript</test_action>
    <parameters>ip='{vds}', password='{passwd}', scriptName='auto_script.sh', command='touch', arguments='/var/tmp/before_vdsm_start.hook', target='/usr/libexec/vdsm/hooks/before_vdsm_start'</parameters>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Create auto_script.py under /usr/libexec/vdsm/hooks/after_vm_pause which creates after.vm.pause.hook when run on /var/tmp</test_name>
    <test_action>createPythonScriptToVerifyCustomHook</test_action>
    <parameters>ip='{vds}', password='{passwd}', scriptName='auto_pause.py', customHook='auto_custom_hook', target='/usr/libexec/vdsm/hooks/after_vm_pause', outputFile= '/var/tmp/after.vm.pause.hook'</parameters>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Create auto_script.py under /usr/libexec/vdsm/hooks/before_vm_start which creates before_vm_start.hook when run on /var/tmp</test_name>
    <test_action>createPythonScriptToVerifyCustomHook</test_action>
    <parameters>ip='{vds}', password='{passwd}', scriptName='auto_before_start.py', customHook='auto_custom_hook', target='/usr/libexec/vdsm/hooks/before_vm_start', outputFile= '/var/tmp/before.vm.start.hook'</parameters>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>END_GROUP: CREATE-SCRIPTS-FOR-TESTING-HOOKS</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<test_case>
   <test_name>Now start vdsmd to be aware of the new hook scripts</test_name>
   <test_action>startVdsmd</test_action>
   <parameters>vds='{vds}', password='{passwd}'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
    <test_name>Sleep 5sec to let vdsmd starts</test_name>
    <test_action>sleep</test_action>
    <parameters>seconds=30</parameters>
    <positive>NONE</positive>
    <run>yes</run>
</test_case>
<!--***********************Test after_vdsm_stop hook***********************-->
<test_case>
    <test_name>START_GROUP: TEST-HOOKS</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<test_case>
    <test_name>Stop vdsmd on the host to invoke vdsm_stop hook</test_name>
    <test_action>stopVdsmd</test_action>
    <parameters>vds='{vds}', password='{passwd}'</parameters>
    <positive>NONE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Sleep 5sec to let vdsmd stop</test_name>
    <test_action>sleep</test_action>
    <parameters>seconds=30</parameters>
    <positive>NONE</positive>
    <run>yes</run>
</test_case>
<test_case>
   <test_name>Check for file created by vdsm_stop hook</test_name>
   <test_action>checkForFileExistenceAndContent</test_action>
   <parameters>ip='{vds}',password='{passwd}',filename='/var/tmp/after_vdsm_stop.hook'</parameters>
   <positive>True</positive>
   <run>yes</run>
   <tcms_plan_id>10054</tcms_plan_id>
   <tcms_test_case>289788</tcms_test_case>
</test_case>
<!--***********************Test before_vdsm_start hook***********************-->
<test_case>
   <test_name>Start vdsmd on the host to invoke start_vdsm hook</test_name>
   <test_action>startVdsmd</test_action>
   <parameters>vds='{vds}', password='{passwd}'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
    <test_name>Sleep 5sec to let vdsmd start</test_name>
    <test_action>sleep</test_action>
    <parameters>seconds=30</parameters>
    <positive>NONE</positive>
    <run>yes</run>
</test_case>
<test_case>
   <test_name>Check for file created by vdsm-start hook</test_name>
   <test_action>checkForFileExistenceAndContent</test_action>
   <parameters>ip='{vds}',password='{passwd}',filename='/var/tmp/before_vdsm_start.hook'</parameters>
   <positive>True</positive>
   <run>yes</run>
   <tcms_plan_id>10054</tcms_plan_id>
   <tcms_test_case>289789</tcms_test_case>
</test_case>
<!--***********************Test before_vm_start hook***********************-->
<test_case>
    <test_name>Start VM to invoke vm-start hook</test_name>
    <test_action>startVm</test_action>
    <parameters>vm='{vm_prefix}', wait_for_status='e{vm_state_up}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Wait for VM to become up</test_name>
    <test_action>waitForIP</test_action>
    <parameters>vm='{vm_prefix}', timeout=1200, sleep=10</parameters>
    <positive>NONE</positive>
    <run>yes</run>
</test_case>
<test_case>
   <test_name>Check for file created by vm-start hook</test_name>
   <test_action>checkForFileExistenceAndContent</test_action>
   <parameters>ip='{vds}',password='{passwd}',filename='/var/tmp/before.vm.start.hook', content='1234'</parameters>
   <positive>True</positive>
   <run>yes</run>
   <tcms_plan_id>10054</tcms_plan_id>
   <tcms_test_case>289791</tcms_test_case>
</test_case>
<!--***********************Test after_vm_stop hook***********************-->
<test_case>
   <test_name>Suspend VM to invoke vm-suspend hook</test_name>
   <test_action>suspendVm</test_action>
   <parameters>vm='{vm_prefix}', wait=True</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
    <test_name>Sleep while VM suspended </test_name>
    <test_action>sleep</test_action>
    <parameters>seconds=30</parameters>
    <positive>NONE</positive>
    <run>no</run>
</test_case>
<test_case>
   <test_name>Check for file created by after_vm_pause hook</test_name>
   <test_action>checkForFileExistenceAndContent</test_action>
   <parameters>ip='{vds}',password='{passwd}',filename='/var/tmp/after.vm.pause.hook', content='1234'</parameters>
   <positive>True</positive>
   <run>Yes</run>
   <tcms_plan_id>10054</tcms_plan_id>
   <tcms_test_case>289793</tcms_test_case>
</test_case>
<test_case>
    <test_name>END_GROUP: TEST-HOOKS</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<!--***********************Cleaning step***********************-->
<test_case>
    <test_name>START_GROUP: CLEANING</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<test_case>
    <test_name>Stop VM inorder to remove it</test_name>
    <test_action>stopVm</test_action>
    <parameters>vm='{vm_prefix}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
   <test_name>remove file created by after_vdsm_stop hook</test_name>
   <test_action>removeFileOnHost</test_action>
   <parameters>positive=True, ip='{vds}',password='{passwd}',filename='/usr/libexec/vdsm/hooks/after_vdsm_stop/auto_script.sh'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>remove file created by before_vdsm_start hook</test_name>
   <test_action>removeFileOnHost</test_action>
   <parameters>positive=True, ip='{vds}',password='{passwd}',filename='/usr/libexec/vdsm/hooks/before_vdsm_start/auto_script.sh'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>remove file created by after_vm_pause hook</test_name>
   <test_action>removeFileOnHost</test_action>
   <parameters>positive=True, ip='{vds}',password='{passwd}',filename='/usr/libexec/vdsm/hooks/after_vm_pause/auto_pause.py'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
   <test_name>remove file created by before_vm_start hook</test_name>
   <test_action>removeFileOnHost</test_action>
   <parameters>positive=True, ip='{vds}',password='{passwd}',filename='/usr/libexec/vdsm/hooks/before_vm_start/auto_before_start.py'</parameters>
   <positive>NONE</positive>
   <run>yes</run>
</test_case>
<test_case>
    <test_name>remove *.hook files under /var/tmp</test_name>
    <test_action>runMachineCommand</test_action>
    <parameters>ip='{vds}', user='{username}', password='{passwd}', cmd="rm -f /var/tmp/*.hook"</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Remove Vm</test_name>
    <test_action>removeVm</test_action>
    <parameters>vm='{vm_prefix}', stopVM='true'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>END_GROUP: CLEANING</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
</input>
