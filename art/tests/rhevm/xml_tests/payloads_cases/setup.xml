<?xml-stylesheet type="text/xsl" href="table.xslt"?>
<input>
<test_case>
    <test_name>START_GROUP: SETUP-ENV</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<test_case>
    <test_name>Create Data Center</test_name>
<test_action>addDataCenter</test_action>
<parameters>name='{data_center_name}',storage_type='e{storage_type_nfs}',version='{compatibility_version}'</parameters>
<positive>TRUE</positive>
<run>yes</run>
</test_case>
<test_case>
    <test_name>Create Cluster With Default Parameters</test_name>
    <test_action>addCluster</test_action>
    <parameters>name='{cluster_name}',cpu='{cpu_name}',data_center='{data_center_name}',version='{compatibility_version}',on_error='migrate'</parameters>
    <positive>TRUE</positive>
<run>yes</run>
</test_case>
<test_case>
    <test_name>Add Host</test_name>
    <test_action>addHost</test_action>
    <parameters>name='{vds[0]}', root_password='{vds_password[0]}', cluster='{cluster_name}', wait=False, vdcPort='{port}'</parameters>
    <positive>TRUE</positive>
    <vital>TRUE</vital>
    <run>yes</run>
</test_case>
<test_case>
<test_name>Wait for host to become UP</test_name>
    <test_action>waitForHostsStates</test_action>
    <parameters>names='{vds[0]}'</parameters>
    <positive>TRUE</positive>
    <vital>TRUE</vital>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Create Data Storage Domain NFS</test_name>
    <test_action>addStorageDomain</test_action>
    <parameters>name='{storage_domain}',type='e{storage_dom_type_data}',storage_type='e{storage_type_nfs}',address='{data_domain_address}',host='{vds[0]}',path='{data_domain_path}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Attach Data Storage Domain to Data Center</test_name>
    <test_action>attachStorageDomain</test_action>
    <parameters>datacenter='{data_center_name}',storagedomain='{storage_domain}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>END_GROUP: SETUP-ENV</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<test_case>
    <test_name>START_GROUP: SETUP</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
<test_case>
    <test_name>Create VM to create Template from it</test_name>
    <test_action>addVm</test_action>
    <parameters>name='payload-vm-for-test', description='payload template test', cluster='{cluster_name}', template= 'Blank', display_type='{display_type}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
   <test_name>Add disk to vm</test_name>
   <test_action>addDiskToVm</test_action>
   <parameters>vm='payload-vm-for-test',size=3221225472,storagedomain='{storage_domain}',type='e{disk_type_system}',format='e{format_raw}',interface='e{interface_ide}',bootable='true'</parameters>
   <positive>TRUE</positive>
   <run>yes</run>
</test_case>
<test_case>
    <test_name>Add NIC to VM to allow boot</test_name>
    <test_action>addNic</test_action>
    <parameters>vm='payload-vm-for-test', name='nic1', network='rhevm'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Install RHEL from network; (short profile) </test_name>
    <test_action>unattendedInstallation</test_action>
    <parameters>vm='payload-vm-for-test', nic='nic1', image='{cobbler_profile}', cobblerAddress='{cobbler_address}', cobblerUser='{cobbler_user}', cobblerPasswd='{cobbler_passwd}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
   <test_name>Wait for information from the template VM (guestInfo)</test_name>
   <test_action>waitForIP</test_action>
   <parameters>vm='payload-vm-for-test', timeout=1200, sleep=10</parameters>
   <positive>NONE</positive>
   <run>yes</run>
   <fetch_output>ip->guest_ip</fetch_output>
</test_case>
<test_case>
    <test_name>set linux vm persistent</test_name>
    <test_action>setPersistentNetwork</test_action>
    <parameters>host=%guest_ip%, password='{vm_password}'</parameters>
    <positive>NONE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Stop VM, so we can create template from it.</test_name>
    <test_action>stopVm</test_action>
    <parameters>vm='payload-vm-for-test'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>Create Template From VM</test_name>
    <test_action>createTemplate</test_action>
    <parameters>vm='payload-vm-for-test',name='payload-template-for-test',cluster='{cluster_name}'</parameters>
    <positive>TRUE</positive>
    <run>yes</run>
</test_case>
<test_case>
    <test_name>END_GROUP: SETUP</test_name>
    <test_action/>
    <parameters></parameters>
    <positive>NONE</positive>
    <run>YES</run>
</test_case>
</input>
