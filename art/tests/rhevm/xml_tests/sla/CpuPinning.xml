<?xml version='1.0' encoding='utf-8'?>
<!-- vim: set ts=3 sw=3 expandtab: -->
<?xml-stylesheet type="text/xsl" href="table.xslt"?>
<input>
<test_case>
   <test_name>START_GROUP: CPU_Pinning_Setup</test_name>
   <test_action/>
   <parameters></parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create Data Center</test_name>
   <test_action>addDataCenter</test_action>
   <parameters>name='{dc_name}', storage_type='{data_center_type}', version='{compatibility_version}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Create Cluster</test_name>
   <test_action>addCluster</test_action>
   <parameters>name='{cluster_name}', cpu='{cpu_name}', version='{compatibility_version}', data_center='{dc_name}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Add Host</test_name>
   <test_action>addHost</test_action>
   <parameters>name='{vds[0]}', root_password='{vds_password[0]}', cluster='{cluster_name}', wait=True</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>iSCSI Discover</test_name>
   <test_action>iscsiDiscover</test_action>
   <parameters>host='{vds[0]}', address='{lun_address}'</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>iSCSI Login</test_name>
   <test_action>iscsiLogin</test_action>
   <parameters>host='{vds[0]}', address='{lun_address}', target='{lun_target}'</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>Create Data Storage Domain iSCSI</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='{storage_name}', type='e{storage_dom_type_data}', storage_type='e{storage_type_iscsi}', host='{vds[0]}', lun='{lun}', lun_address='{lun_address}', lun_target='{lun_target}', lun_port='3260'</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_iscsi}')</run>
</test_case>
<test_case>
   <test_name>Create Data Storage Domain NFS</test_name>
   <test_action>addStorageDomain</test_action>
   <parameters>name='{storage_name}', type='e{storage_dom_type_data}', storage_type='e{storage_type_nfs}', host='{vds[0]}', address='{slatest_data_domain_address}', path='{slatest_data_domain_path[0]}'</parameters>
   <positive>TRUE</positive>
   <run>if('{data_center_type}' == 'e{storage_type_nfs}')</run>
</test_case>
<test_case>
   <test_name>Attach Master Data Storage Domain to Data Center</test_name>
   <test_action>attachStorageDomain</test_action>
   <parameters>datacenter='{dc_name}', storagedomain='{storage_name}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>END_GROUP: CPU_Pinning_Setup</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
   <test_name>START_GROUP: CPU_Pinning_Test</test_name>
   <test_action/>
   <parameters></parameters>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- /////////////////  PINNING VIRTUAL CPU TO PHYSICAL CPU  ////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
   <test_name>Create VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='cputest_vm1', vmDescription='CPU Pinning VM', cluster='{cluster_name}', storageDomainName='{storage_name}', size=3221225472, nic='nic1', memory=1073741824</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<!-- Repeat N times -->
<test_case>
   <test_name>Pin vCPU to a random pCPU and if check pinning holds - #loop_index</test_name>
   <test_action>checkRandomPinning</test_action>
   <parameters>host='{vds[0]}', host_user='root', host_pwd='{vds_password[0]}', vm='cputest_vm1'</parameters>
   <positive>TRUE</positive>
   <run>loop(int{cpu_iterations})</run>
</test_case>
<test_case>
   <test_name>Remove VM</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='cputest_vm1', wait=True</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- ///////////////  NEGATIVE - CPU PINNING A MIGRATABLE VM   //////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
   <test_name>Create VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='cputest_vm2', vmDescription='CPU Pinning VM', cluster='{cluster_name}', storageDomainName='{storage_name}', size=3221225472, nic='nic1', memory=1073741824</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Negative: Pin a vCPU of a migratable VM</test_name>
   <test_action>updateVm</test_action>
   <parameters>vm='cputest_vm2', vcpu_pinning={'0':'0'}</parameters>
   <positive>FALSE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove VM</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='cputest_vm2', wait=True</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- /////////////////  NEGATIVE - MIGRATE A CPU PINNED VM   ////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
   <test_name>Create CPU pinned VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='cputest_vm3', vmDescription='CPU Pinning VM', cluster='{cluster_name}', storageDomainName='{storage_name}', size=3221225472, nic='nic1', memory=1073741824, vcpu_pinning={'0':'0'}, placement_affinity='pinned', placement_host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Negative: Change VM placement affinity to migratable</test_name>
   <test_action>updateVm</test_action>
   <parameters>vm='cputest_vm3', placement_affinity='migratable', placement_host='{vds[0]}'</parameters>
   <positive>FALSE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove VM</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='cputest_vm3', wait=True, stopVm=True</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- /////////  NEGATIVE - PIN NON-EXISTING VCPU TO EXISTING CPU  ///////// -->
  <!-- /////////////////  CURRENTLY DISABLED DUE TO A BUG  ////////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
   <test_name>Create CPU pinned VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='cputest_vm4', vmDescription='CPU Pinning VM', cluster='{cluster_name}', storageDomainName='{storage_name}', size=3221225472, nic='nic1', memory=1073741824</parameters>
   <positive>TRUE</positive>
   <run>NO</run>
</test_case>
<test_case>
   <test_name>Negative: Pin a non-exising vPU to an existing CPU</test_name>
   <test_action>updateVm</test_action>
   <parameters>vm='cputest_vm4', placement_affinity='pinned', placement_host='{vds[0]}', vcpu_pinning={1500:'0'}</parameters>
   <positive>TRUE</positive>
   <run>NO</run>
</test_case>
<test_case>
   <test_name>Start VM</test_name>
   <test_action>startVm</test_action>
   <parameters>vm='cputest_vm4'</parameters>
   <positive>FALSE</positive>
   <run>NO</run>
</test_case>
<test_case>
   <test_name>Remove VM</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='cputest_vm4', wait=True, stopVm=True</parameters>
   <positive>TRUE</positive>
   <run>NO</run>
</test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- /////////  NEGATIVE - PIN EXISTING VCPU TO NON-EXISTING CPU  ///////// -->
  <!-- /////////////////  CURRENTLY DISABLED DUE TO A BUG  ////////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
   <test_name>Create CPU pinned VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='cputest_vm5', vmDescription='CPU Pinning VM', cluster='{cluster_name}', storageDomainName='{storage_name}', size=3221225472, nic='nic1', memory=536870912</parameters>
   <positive>TRUE</positive>
   <run>NO</run>
</test_case>
<test_case>
   <test_name>Negative: Pin an existing vCPU to a non-eisting pCPU</test_name>
   <test_action>updateVm</test_action>
   <parameters>vm='cputest_vm5', placement_affinity='pinned', placement_host='{vds[0]}', vcpu_pinning={0:'1500'}</parameters>
   <positive>TRUE</positive>
   <run>NO</run>
</test_case>
<test_case>
   <test_name>Start VM</test_name>
   <test_action>startVm</test_action>
   <parameters>vm='cputest_vm5'</parameters>
   <positive>FALSE</positive>
   <run>NO</run>
</test_case>
<test_case>
   <test_name>Remove VM</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='cputest_vm5', wait=True, stopVm=True</parameters>
   <positive>TRUE</positive>
   <run>NO</run>
</test_case>
  <!-- ////////////////////////////////////////////////////////////////////// -->
  <!-- ////////////////// PIN ALL VCPUS TO A SINGLE PCPU   ////////////////// -->
  <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
   <test_name>Create CPU pinned VM</test_name>
   <test_action>createVm</test_action>
   <parameters>vmName='cputest_vm6', vmDescription='CPU Pinning VM', cluster='{cluster_name}', storageDomainName='{storage_name}', size=3221225472, nic='nic1', memory=1073741824, cpu_socket='1', cpu_cores='{cpu_cores_num}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Pin all vCPU's to a single pCPU and check if pinning holds</test_name>
   <test_action>testPinningLoad</test_action>
   <parameters>host='{vds[0]}', host_user='root', host_pwd='{vds_password[0]}', vm='cputest_vm6'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove VM</test_name>
   <test_action>removeVm</test_action>
   <parameters>vm='cputest_vm6', wait=True, stopVm=True</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>END_GROUP: CPU_Pinning_Test</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
   <!-- ////////////////////////////////////////////////////////////////////// -->
<test_case>
<test_name>START_GROUP: CPU_Pinning_Teardown</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Deactivate Storage Domain</test_name>
   <test_action>deactivateStorageDomain</test_action>
   <parameters>datacenter='{dc_name}', storagedomain='{storage_name}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Data Centers</test_name>
   <test_action>removeDataCenters</test_action>
   <parameters>datacenters='{dc_name}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Storage Domain</test_name>
   <test_action>removeStorageDomain</test_action>
   <parameters>storagedomain='{storage_name}', host='{vds[0]}', format='true'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Set Active Host To Maintenance</test_name>
   <test_action>deactivateHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Inactive Host</test_name>
   <test_action>removeHost</test_action>
   <parameters>host='{vds[0]}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>Remove Clusters</test_name>
   <test_action>removeClusters</test_action>
   <parameters>clusters='{cluster_name}'</parameters>
   <positive>TRUE</positive>
   <run>YES</run>
</test_case>
<test_case>
   <test_name>END_GROUP: CPU_Pinning_Teardown</test_name>
   <test_action/>
   <parameters/>
   <positive>NONE</positive>
   <run/>
</test_case>
</input>
